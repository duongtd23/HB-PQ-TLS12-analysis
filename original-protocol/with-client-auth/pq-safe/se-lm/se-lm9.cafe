--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  red se-lm9(init,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcPublicK .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(brkECDH(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcPublicK .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(brkECDH(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqPublicK .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(brkKEM(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqCipher .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(brkKEM2(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(brkSign(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> PqPublicK .
  op r5 : -> EcSecretK .
  op r6 : -> PqSecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  op sign : -> Data .
  eq (ckexM(r1,r1,r3,(ecPublic(r5) || encapsC(r4,r6)),r7) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cChangeCS(s,r1,r3,r4,r5,r6,r7),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> PqPublicK .
  op r5 : -> EcSecretK .
  op r6 : -> PqSecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  op sign : -> Data .
  eq (ckexM(r1,r1,r3,(ecPublic(r5) || encapsC(r4,r6)),r7) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cChangeCS(s,r1,r3,r4,r5,r6,r7),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = true .
  eq (sf2M(r8,r3,r1,enc(hsskey2(r10,(r5 || r11)),h((r1 || r3 || r6 || r9 || r4 || r5 || r7 || r11)))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cChangeCS2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = true .
  eq (sf2M(r8,r3,r1,enc(hsskey2(r10,(r5 || r11)),h((r1 || r3 || r6 || r9 || r4 || r5 || r7 || r11)))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cChangeCS2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cChangeCS2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cChangeCS2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq (ss(s,r1,r3,r6) = session(client,r9,r10)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cChangeCS2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccert(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccert(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccert(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccert(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccert(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccert(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccert(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r13 = sign(signPriK(ca),h((r3 || r12)))) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccert(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = true .
  eq (certM(r1,r1,r3,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))))) \in nw(s)) = true .
  eq (certVerM(r1,r1,r3,sign(signPriK(r1),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r3,enc(hsckey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) \in nw(s)) = true .
  eq (sfM(r8,r3,r1,enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = true .
  eq (certM(r1,r1,r3,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))))) \in nw(s)) = true .
  eq (certVerM(r1,r1,r3,sign(signPriK(r1),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r3,enc(hsckey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) \in nw(s)) = true .
  eq (sfM(r8,r3,r1,enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = true .
  eq (certM(r1,r1,r3,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))))) \in nw(s)) = true .
  eq (certVerM(r1,r1,r3,sign(signPriK(r1),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r3,enc(hsckey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = true .
  eq (certM(r1,r1,r3,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))))) \in nw(s)) = true .
  eq (certVerM(r1,r1,r3,sign(signPriK(r1),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = true .
  eq (certM(r1,r1,r3,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19)))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (r21 = enc(hsskey(ms(((r18 | ecSecret(r14)) || (pqSecret(r15) & r19)),(r5 || r9 || ecPublic(r18) || encapsC(r15,r19))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r13 = sign(signPriK(ca),h((r3 || r12)))) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Rand .
  op r5 : -> Rand .
  op r6 : -> EcSecretK .
  op r7 : -> PqSecretK .
  op r8 : -> Nat .
  op s : -> Sys .
  op sign : -> Data .
  eq (skexM(r3,r3,r1,(ecPublic(r6) || keygen(r7) || sign(signPriK(r3),h((r4 || r5 || ecPublic(r6) || keygen(r7))))),r8) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certReq(s,r1,r3,r4,r5,r6,r7,r8),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Rand .
  op r5 : -> Rand .
  op r6 : -> EcSecretK .
  op r7 : -> PqSecretK .
  op r8 : -> Nat .
  op s : -> Sys .
  op sign : -> Data .
  eq (skexM(r3,r3,r1,(ecPublic(r6) || keygen(r7) || sign(signPriK(r3),h((r4 || r5 || ecPublic(r6) || keygen(r7))))),r8) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certReq(s,r1,r3,r4,r5,r6,r7,r8),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = true .
  eq (certM(r1,r1,r3,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certVer(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = true .
  eq (certM(r1,r1,r3,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certVer(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certVer(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certVer(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certVer(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certVer(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certVer(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certVer(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certVer(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r13 = sign(signPriK(ca),h((r3 || r12)))) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(certVer(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = true .
  eq (certM(r1,r1,r3,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))))) \in nw(s)) = true .
  eq (certVerM(r1,r1,r3,sign(signPriK(r1),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = true .
  eq (certM(r1,r1,r3,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))))) \in nw(s)) = true .
  eq (certVerM(r1,r1,r3,sign(signPriK(r1),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || sign(signPriK(ca),h((r3 || r12))) || r14 || r15 || r16 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || ecPublic(r18) || encapsC(r15,r19))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = true .
  eq (certM(r1,r1,r3,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || sign(signPriK(ca),h((r3 || r12))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r18) || encapsC(r15,r19)),r20) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r14 || r15 || r16),r17) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = true .
  eq verify(r12,h((r5 || r9 || r14 || r15)),r16) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r13 = sign(signPriK(ca),h((r3 || r12))) .
  eq (certReqM(r8,r3,r1) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> SignPubK .
  op r13 : -> Data .
  op r14 : -> EcPublicK .
  op r15 : -> PqPublicK .
  op r16 : -> Data .
  op r17 : -> Nat .
  op r18 : -> EcSecretK .
  op r19 : -> PqSecretK .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r13 = sign(signPriK(ca),h((r3 || r12)))) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = true .
  eq (sf2M(r8,r3,r1,enc(hsskey2(r10,(r5 || r11)),h((r1 || r3 || r6 || r9 || r4 || r5 || r7 || r11)))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = true .
  eq (sf2M(r8,r3,r1,enc(hsskey2(r10,(r5 || r11)),h((r1 || r3 || r6 || r9 || r4 || r5 || r7 || r11)))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq (ss(s,r1,r3,r6) = session(client,r9,r10)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(cfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(chello(s,r1,r3,r4,r5,r6,r7),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq (r5 \in udata(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(chello(s,r1,r3,r4,r5,r6,r7),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Suite .
  op r9 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r7,r8) = true .
  eq (r5 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(chello2(s,r1,r3,r4,r5,r6,r7,r8,r9),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Suite .
  op r9 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r7,r8) = true .
  eq (r5 \in udata(s)) = false .
  eq ss(s,r1,r3,r6) = session(client,r8,r9) .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(chello2(s,r1,r3,r4,r5,r6,r7,r8,r9),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Suite .
  op r9 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r7,r8) = true .
  eq (r5 \in udata(s)) = false .
  eq (ss(s,r1,r3,r6) = session(client,r8,r9)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(chello2(s,r1,r3,r4,r5,r6,r7,r8,r9),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Suite .
  op r9 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r7,r8) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(chello2(s,r1,r3,r4,r5,r6,r7,r8,r9),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r1 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (certReqM(r10,r5,r4) \in nw(s)) = true .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r4,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r4,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r4,(r16 || r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r10,r5,r4,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))))) \in nw(s)) = true .
  eq (certM(r4,r4,r5,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (certReqM(r10,r5,r4) \in nw(s)) = true .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r4,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r4,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r4,(r16 || r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r10,r5,r4,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))))) \in nw(s)) = true .
  eq (certM(r4,r4,r5,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (certReqM(r10,r5,r4) \in nw(s)) = true .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r4,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r4,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r4,(r16 || r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r10,r5,r4,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (certReqM(r10,r5,r4) \in nw(s)) = true .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r4,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r4,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r4,(r16 || r17 || r18),r19) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (certReqM(r10,r5,r4) \in nw(s)) = true .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r4,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r4,(r6 || r11 || r12 || r13)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (certReqM(r10,r5,r4) \in nw(s)) = true .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r4,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (certReqM(r10,r5,r4) \in nw(s)) = true .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (certReqM(r10,r5,r4) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  eq (r15 = sign(signPriK(ca),h((r5 || r14)))) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqCipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkCkeyex(s,r1,r3,r4,r5),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqCipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkCkeyex(s,r1,r3,r4,r5),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqCipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkCkeyex(s,r1,r3,r4,r5),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkFinish(s,r1,r3,r4),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkFinish(s,r1,r3,r4),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkHello(s,r1,r3,r4),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkHello(s,r1,r3,r4),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkNoti(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> SignPubK .
  op r5 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkScert(s,r1,r3,r4,r5),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> SignPubK .
  op r5 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkScert(s,r1,r3,r4,r5),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> SignPubK .
  op r5 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkScert(s,r1,r3,r4,r5),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqPublicK .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkSkeyex(s,r1,r3,r4,r5,r6),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqPublicK .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkSkeyex(s,r1,r3,r4,r5,r6),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqPublicK .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkSkeyex(s,r1,r3,r4,r5,r6),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqPublicK .
  op r6 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r4 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(fkSkeyex(s,r1,r3,r4,r5,r6),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(g1(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(g1(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(g21(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(g21(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(g21(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(g22(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(g22(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(g22(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(g23(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(g23(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(g23(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Version .
  op r2 : -> Rand .
  op r3 : -> Suites .
  op r4 : -> Suite .
  op r5 : -> SignPubK .
  op r6 : -> Prin .
  op r7 : -> PqKemParams .
  op s : -> Sys .
  op sign : -> Data .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gBasic(s,r1,r3,r4,r5,r6,r7),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gBasic2(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gBasic2(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gBasic2(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqCipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gDecaps(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqCipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gDecaps(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqCipher .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gDecaps(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gEcSecretK(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gEcSecretK(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> EcPublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gEcShare(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> EcPublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gEcShare(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> EcPublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gEcShare(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gPqSecretK(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gPqSecretK(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqPublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gPqShare(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqPublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gPqShare(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqPublicK .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gPqShare(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> SignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gSign(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> SignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gSign(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> SignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in knl(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(gSign(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(helloReq(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r1 = ca .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(rvSignK(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 = ca) = false .
  eq (signPriK(r1) \in' scrLeaked(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(rvSignK(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 = ca) = false .
  eq (signPriK(r1) \in' scrLeaked(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(rvSignK(s,r1),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq (r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r16 = sign(signPriK(ca),h((r3 || r15)))) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Rand .
  op r8 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq (sh2M(r3,r3,r1,(r4 || r7 || r6 || r8)) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS2(s,r1,r3,r4,r5,r6,r7,r8),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Rand .
  op r8 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq (sh2M(r3,r3,r1,(r4 || r7 || r6 || r8)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sChangeCS2(s,r1,r3,r4,r5,r6,r7,r8),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suite .
  op r7 : -> Sid .
  op s : -> Sys .
  op sign : -> Data .
  eq (shM(r3,r3,r1,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(scert(s,r1,r3,r4,r5,r6,r7),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suite .
  op r7 : -> Sid .
  op s : -> Sys .
  op sign : -> Data .
  eq (shM(r3,r3,r1,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(scert(s,r1,r3,r4,r5,r6,r7),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq r3 = intru .
  eq (certVerM(r1,intru,r4,r20) \in nw(s)) = true .
  eq (chM(r1,intru,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,intru,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,intru,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,intru,r4,(intru || r15 || sign(signPriK(ca),h((intru || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,intru,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,intru,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((intru || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((intru || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,intru,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((intru || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((intru || r15))) || r17 || r18)))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq r3 = intru .
  eq (certVerM(r1,intru,r4,r20) \in nw(s)) = true .
  eq (chM(r1,intru,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,intru,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,intru,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,intru,r4,(intru || r15 || sign(signPriK(ca),h((intru || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,intru,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,intru,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((intru || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((intru || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,intru,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((intru || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((intru || r15))) || r17 || r18)))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq r3 = intru .
  eq (certVerM(r1,intru,r4,r20) \in nw(s)) = true .
  eq (chM(r1,intru,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,intru,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,intru,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,intru,r4,(intru || r15 || sign(signPriK(ca),h((intru || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,intru,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,intru,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((intru || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((intru || r15))) || r17 || r18)),r20) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq r3 = intru .
  eq (certVerM(r1,intru,r4,r20) \in nw(s)) = true .
  eq (chM(r1,intru,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,intru,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,intru,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,intru,r4,(intru || r15 || sign(signPriK(ca),h((intru || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,intru,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,intru,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq r3 = intru .
  eq (certVerM(r1,intru,r4,r20) \in nw(s)) = true .
  eq (chM(r1,intru,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,intru,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,intru,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,intru,r4,(intru || r15 || sign(signPriK(ca),h((intru || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,intru,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq r3 = intru .
  eq (certVerM(r1,intru,r4,r20) \in nw(s)) = true .
  eq (chM(r1,intru,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,intru,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,intru,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,intru,r4,(intru || r15 || sign(signPriK(ca),h((intru || r15))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq r3 = intru .
  eq (certVerM(r1,intru,r4,r20) \in nw(s)) = true .
  eq (chM(r1,intru,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,intru,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,intru,r4,(r17 || r18),r19) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq r3 = intru .
  eq (certVerM(r1,intru,r4,r20) \in nw(s)) = true .
  eq (chM(r1,intru,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,intru,(r5 || r9 || r10 || r11)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq r3 = intru .
  eq (certVerM(r1,intru,r4,r20) \in nw(s)) = true .
  eq (chM(r1,intru,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq r3 = intru .
  eq (certVerM(r1,intru,r4,r20) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq r4 = intru .
  eq (certVerM(r1,r3,intru,r20) \in nw(s)) = true .
  eq (chM(r1,r3,intru,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(intru,intru,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,intru,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,intru,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(intru,intru,r3,(intru || signPubK(intru) || sign(signPriK(ca),h((intru || signPubK(intru)))))) \in nw(s)) = true .
  eq (skexM(intru,intru,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(intru),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || intru || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(intru) || sign(signPriK(ca),h((intru || signPubK(intru)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(intru),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,intru,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || intru || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(intru) || sign(signPriK(ca),h((intru || signPubK(intru)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(intru),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq r4 = intru .
  eq (certVerM(r1,r3,intru,r20) \in nw(s)) = true .
  eq (chM(r1,r3,intru,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(intru,intru,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,intru,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,intru,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(intru,intru,r3,(intru || signPubK(intru) || sign(signPriK(ca),h((intru || signPubK(intru)))))) \in nw(s)) = true .
  eq (skexM(intru,intru,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(intru),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || intru || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(intru) || sign(signPriK(ca),h((intru || signPubK(intru)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(intru),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,intru,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || intru || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(intru) || sign(signPriK(ca),h((intru || signPubK(intru)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(intru),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq r4 = intru .
  eq (certVerM(r1,r3,intru,r20) \in nw(s)) = true .
  eq (chM(r1,r3,intru,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(intru,intru,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,intru,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,intru,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(intru,intru,r3,(intru || signPubK(intru) || sign(signPriK(ca),h((intru || signPubK(intru)))))) \in nw(s)) = true .
  eq (skexM(intru,intru,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(intru),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || intru || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(intru) || sign(signPriK(ca),h((intru || signPubK(intru)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(intru),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq r4 = intru .
  eq (certVerM(r1,r3,intru,r20) \in nw(s)) = true .
  eq (chM(r1,r3,intru,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(intru,intru,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,intru,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,intru,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(intru,intru,r3,(intru || signPubK(intru) || sign(signPriK(ca),h((intru || signPubK(intru)))))) \in nw(s)) = true .
  eq (skexM(intru,intru,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(intru),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq r4 = intru .
  eq (certVerM(r1,r3,intru,r20) \in nw(s)) = true .
  eq (chM(r1,r3,intru,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(intru,intru,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,intru,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,intru,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(intru,intru,r3,(intru || signPubK(intru) || sign(signPriK(ca),h((intru || signPubK(intru)))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq r4 = intru .
  eq (certVerM(r1,r3,intru,r20) \in nw(s)) = true .
  eq (chM(r1,r3,intru,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(intru,intru,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,intru,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,intru,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq r4 = intru .
  eq (certVerM(r1,r3,intru,r20) \in nw(s)) = true .
  eq (chM(r1,r3,intru,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(intru,intru,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,intru,(r17 || r18),r19) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq r4 = intru .
  eq (certVerM(r1,r3,intru,r20) \in nw(s)) = true .
  eq (chM(r1,r3,intru,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(intru,intru,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq r4 = intru .
  eq (certVerM(r1,r3,intru,r20) \in nw(s)) = true .
  eq (chM(r1,r3,intru,(r5 || r6 || r7 || r8)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq r4 = intru .
  eq (certVerM(r1,r3,intru,r20) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq (r4 = intru) = false .
  eq dl = (r11 || r5 || r6 || r7 || r8 || r9 || r10) .
  eq sign = sign(signPriK(ca),h((r3 || r15))) .
  eq (certVerM(?a2,r3,r4,?sign2) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),?sign2) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq (r4 = intru) = false .
  eq dl = (r11 || r5 || r6 || r7 || r8 || r9 || r10) .
  eq sign = sign(signPriK(ca),h((r3 || r15))) .
  eq (certVerM(?a2,r3,r4,?sign2) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),?sign2) = false .
  eq (sfM(r4,r4,r3,enc(hsskey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true, the witness is r1,r20
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq (r4 = intru) = false .
  eq dl = (r11 || r5 || r6 || r7 || r8 || r9 || r10) .
  eq sign = sign(signPriK(ca),h((r3 || r15))) .
  eq (certVerM(?a2,r3,r4,?sign2) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),?sign2) = false .
  eq (sfM(r4,r4,r3,enc(hsskey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,r1,k,k',pk2,en,r,r2,cspk,sign,r20,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq (r4 = intru) = false .
  eq dl = (r11 || r5 || r6 || r7 || r8 || r9 || r10) .
  eq sign = sign(signPriK(ca),h((r3 || r15))) .
  eq (certVerM(?a2,r3,r4,?sign2) \in nw(s)) = false .
  eq (sfM(r4,r4,r3,enc(hsskey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true, the witness is r1,r20
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq (r4 = intru) = false .
  eq dl = (r11 || r5 || r6 || r7 || r8 || r9 || r10) .
  eq sign = sign(signPriK(ca),h((r3 || r15))) .
  eq (certVerM(?a2,r3,r4,?sign2) \in nw(s)) = false .
  eq (sfM(r4,r4,r3,enc(hsskey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,r1,k,k',pk2,en,r,r2,cspk,sign,r20,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq (r4 = intru) = false .
  eq dl = (r11 || r5 || r6 || r7 || r8 || r9 || r10) .
  eq (sign = sign(signPriK(ca),h((r3 || r15)))) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq r2 = r9 .
  eq (r3 = intru) = false .
  eq (r4 = intru) = false .
  eq (dl = (r11 || r5 || r6 || r7 || r8 || r9 || r10)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq r = r6 .
  eq (r2 = r9) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq pk2 = r17 .
  eq (r = r6) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq k' = r13 .
  eq (pk2 = r17) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq k = r12 .
  eq (k' = r13) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq en = r18 .
  eq (k = r12) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq cspk = r15 .
  eq (en = r18) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq b = r4 .
  eq (cspk = r15) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq a = r3 .
  eq (b = r4) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = true .
  eq (a = r3) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq verify(r15,h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)),r20) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r1,r3,r4,(r3 || r15 || sign(signPriK(ca),h((r3 || r15))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r17 || r18),r19) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = true .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18))) .
  eq (certVerM(r1,r3,r4,r20) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq r16 = sign(signPriK(ca),h((r3 || r15))) .
  eq (r21 = enc(hsckey(ms(((r12 | ecSecret(r17)) || decaps(r18,r13)),(r6 || r9 || r17 || r18)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || signPubK(r4) || sign(signPriK(ca),h((r4 || signPubK(r4)))) || ecPublic(r12) || keygen(r13) || sign(signPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || sign(signPriK(ca),h((r3 || r15))) || r17 || r18)))) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> SignPubK .
  op r16 : -> Data .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq (r16 = sign(signPriK(ca),h((r3 || r15)))) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Sid .
  op r8 : -> Suites .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq ss(s,r4,r3,r7) = session(server,r9,r10) .
  eq (ch2M(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (sh2M(r4,r4,r3,(r5 || r11 || r7 || r9)) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Sid .
  op r8 : -> Suites .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq ss(s,r4,r3,r7) = session(server,r9,r10) .
  eq (ch2M(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (sh2M(r4,r4,r3,(r5 || r11 || r7 || r9)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Sid .
  op r8 : -> Suites .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq ss(s,r4,r3,r7) = session(server,r9,r10) .
  eq (ch2M(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Sid .
  op r8 : -> Suites .
  op r9 : -> Suite .
  op s : -> Sys .
  op sign : -> Data .
  eq (ss(s,r4,r3,r7) = session(server,r9,r10)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(sfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Suite .
  op r4 : -> Sid .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r10,r3) = true .
  eq (r1 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shello(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Suite .
  op r4 : -> Sid .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r10,r3) = true .
  eq (r1 \in udata(s)) = false .
  eq (r4 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shello(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Suite .
  op r4 : -> Sid .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r10,r3) = true .
  eq (r1 \in udata(s)) = false .
  eq (r4 \in udata(s)) = false .
  eq (chM(r5,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shello(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Suite .
  op r4 : -> Sid .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r10,r3) = true .
  eq (r1 \in udata(s)) = false .
  eq (r4 \in udata(s)) = false .
  eq (chM(r5,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shello(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Suite .
  op r4 : -> Sid .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r10,r3) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shello(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r9,r10) = true .
  eq (r1 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shello2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r9,r10) = true .
  eq (r1 \in udata(s)) = false .
  eq ss(s,r5,r4,r8) = session(server,r10,r11) .
  eq (ch2M(r3,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shello2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r9,r10) = true .
  eq (r1 \in udata(s)) = false .
  eq ss(s,r5,r4,r8) = session(server,r10,r11) .
  eq (ch2M(r3,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shello2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r9,r10) = true .
  eq (r1 \in udata(s)) = false .
  eq (ss(s,r5,r4,r8) = session(server,r10,r11)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shello2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  op sign : -> Data .
  eq contains(r9,r10) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shello2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (certReqM(r3,r3,r1) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shelloDone(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op s : -> Sys .
  op sign : -> Data .
  eq (certReqM(r3,r3,r1) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(shelloDone(s,r1,r3),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))))) \in nw(s)) = true .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))))) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> true
open PQSAFE-CONFIG .
  op ?a2 : -> Prin .
  op ?sign2 : -> Data .
  op a : -> Prin .
  op b : -> Prin .
  op cspk : -> SignPubK .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  op sign : -> Data .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = false .
  red se-lm9(s,a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) implies se-lm9(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,?a2,k,k',pk2,en,r,r2,cspk,sign,?sign2,dl) .
close

--> Time taken is 5864ms