--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  red se-lm6(init,a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcPublicK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(brkECDH(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqPublicK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(brkKEM(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqPublicK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(brkKEM(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqCipher .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(brkKEM2(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqCipher .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(brkKEM2(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(brkSign(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> PqPublicK .
  op r7 : -> EcSecretK .
  op r8 : -> PqSecretK .
  op r9 : -> Nat .
  op s : -> Sys .
  eq (ckexM(r1,r1,r5,(ecPublic(r7) || encapsC(r6,r8)),r9) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cChangeCS(s,r1,r5,r6,r7,r8,r9),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> PqPublicK .
  op r7 : -> EcSecretK .
  op r8 : -> PqSecretK .
  op r9 : -> Nat .
  op s : -> Sys .
  eq (ckexM(r1,r1,r5,(ecPublic(r7) || encapsC(r6,r8)),r9) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cChangeCS(s,r1,r5,r6,r7,r8,r9),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cChangeCS2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cChangeCS2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cChangeCS2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cChangeCS2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (ss(s,r1,r5,r8) = session(client,r11,r12)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cChangeCS2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r23 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r23 = enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21)))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r16 || r17 || r18),r19) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r20) || encapsC(r17,r21)),r22) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r5,enc(hsckey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21))))) \in nw(s)) = true .
  eq (sfM(r10,r5,r1,enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21))))) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r23 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r23 = enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21)))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r16 || r17 || r18),r19) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r20) || encapsC(r17,r21)),r22) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r5,enc(hsckey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21))))) \in nw(s)) = true .
  eq (sfM(r10,r5,r1,enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21))))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r23 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r23 = enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21)))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r16 || r17 || r18),r19) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r20) || encapsC(r17,r21)),r22) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r5,enc(hsckey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21))))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r23 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r23 = enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21)))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r16 || r17 || r18),r19) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r20) || encapsC(r17,r21)),r22) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r23 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r23 = enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21)))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r16 || r17 || r18),r19) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r20) || encapsC(r17,r21)),r22) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r23 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r23 = enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21)))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r16 || r17 || r18),r19) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r23 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r23 = enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21)))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r23 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r23 = enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21)))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r23 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r23 = enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21)))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r23 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r23 = enc(hsskey(ms(((r20 | ecSecret(r16)) || (pqSecret(r17) & r21)),(r7 || r11 || ecPublic(r20) || encapsC(r17,r21))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || r17 || r18 || ecPublic(r20) || encapsC(r17,r21))))) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r23 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq (r15 = sign(signPriK(ca),h((r5 || r14)))) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r16 || r17 || r18),r19) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r20) || encapsC(r17,r21)),r22) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))))) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r16 || r17 || r18),r19) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r20) || encapsC(r17,r21)),r22) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r16 || r17 || r18),r19) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r20) || encapsC(r17,r21)),r22) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r16 || r17 || r18),r19) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq verify(r14,h((r7 || r11 || r16 || r17)),r18) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> EcSecretK .
  op r21 : -> PqSecretK .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq (r15 = sign(signPriK(ca),h((r5 || r14)))) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (ss(s,r1,r5,r8) = session(client,r11,r12)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq (r7 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(chello(s,r1,r5,r6,r7,r8,r9),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq (r7 \in udata(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(chello(s,r1,r5,r6,r7,r8,r9),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = true .
  eq (r7 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(chello2(s,r1,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = true .
  eq (r7 \in udata(s)) = false .
  eq ss(s,r1,r5,r8) = session(client,r10,r11) .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(chello2(s,r1,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = true .
  eq (r7 \in udata(s)) = false .
  eq (ss(s,r1,r5,r8) = session(client,r10,r11)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(chello2(s,r1,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(chello2(s,r1,r5,r6,r7,r8,r9,r10,r11),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq (r1 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq verify(r16,h((r9 || r13 || r18 || r19)),r20) = true .
  eq (chM(r6,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (shM(r12,r7,r6,(r8 || r13 || r14 || r15)) \in nw(s)) = true .
  eq (skexM(r12,r7,r6,(r18 || r19 || r20),r21) \in nw(s)) = true .
  eq (certM(r12,r7,r6,(r7 || r16 || sign(signPriK(ca),h((r7 || r16))))) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq verify(r16,h((r9 || r13 || r18 || r19)),r20) = true .
  eq (chM(r6,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (shM(r12,r7,r6,(r8 || r13 || r14 || r15)) \in nw(s)) = true .
  eq (skexM(r12,r7,r6,(r18 || r19 || r20),r21) \in nw(s)) = true .
  eq (certM(r12,r7,r6,(r7 || r16 || sign(signPriK(ca),h((r7 || r16))))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq verify(r16,h((r9 || r13 || r18 || r19)),r20) = true .
  eq (chM(r6,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (shM(r12,r7,r6,(r8 || r13 || r14 || r15)) \in nw(s)) = true .
  eq (skexM(r12,r7,r6,(r18 || r19 || r20),r21) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq verify(r16,h((r9 || r13 || r18 || r19)),r20) = true .
  eq (chM(r6,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (shM(r12,r7,r6,(r8 || r13 || r14 || r15)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq verify(r16,h((r9 || r13 || r18 || r19)),r20) = true .
  eq (chM(r6,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq verify(r16,h((r9 || r13 || r18 || r19)),r20) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq (r17 = sign(signPriK(ca),h((r7 || r16)))) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqCipher .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkCkeyex(s,r1,r5,r6,r7),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqCipher .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkCkeyex(s,r1,r5,r6,r7),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqCipher .
  op s : -> Sys .
  eq (r6 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkCkeyex(s,r1,r5,r6,r7),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkFinish(s,r1,r5,r6),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkFinish(s,r1,r5,r6),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> DataL .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkHello(s,r1,r5,r6),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> DataL .
  op s : -> Sys .
  eq (r6 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkHello(s,r1,r5,r6),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op s : -> Sys .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkNoti(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> SignPubK .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkScert(s,r1,r5,r6,r7),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> SignPubK .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkScert(s,r1,r5,r6,r7),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> SignPubK .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkScert(s,r1,r5,r6,r7),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqPublicK .
  op r8 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  eq (r8 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkSkeyex(s,r1,r5,r6,r7,r8),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqPublicK .
  op r8 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  eq (r8 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkSkeyex(s,r1,r5,r6,r7,r8),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqPublicK .
  op r8 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkSkeyex(s,r1,r5,r6,r7,r8),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqPublicK .
  op r8 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(fkSkeyex(s,r1,r5,r6,r7,r8),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(g1(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(g1(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(g21(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(g21(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(g21(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(g22(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(g22(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(g22(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(g23(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(g23(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(g23(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Version .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suites .
  op r6 : -> Suite .
  op r7 : -> SignPubK .
  op r8 : -> Prin .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gBasic(s,r1,r5,r6,r7,r8,r9),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gBasic2(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gBasic2(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gBasic2(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqCipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gDecaps(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqCipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gDecaps(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqCipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gDecaps(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gEcSecretK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq k = r1 .
  eq a = intru .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gEcSecretK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq b = intru .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gEcSecretK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gEcSecretK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true, use scrused-lm12 as a lemma
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (sf2M(b,b,a,enc(hsskey2(ms(((r1 | ecSecret(pk2)) || decaps(en,k')),(r || r2 || pk2 || en)),(r3 || r4)),h((a || b || dl)))) \in nw(s)) = true .
  red scrused-lm12(s,a,b,r1,k',pk2,en,r,r2,r3,r4,dl) implies (se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gEcSecretK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl)) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq k = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (sf2M(b,b,a,enc(hsskey2(ms(((r1 | ecSecret(pk2)) || decaps(en,k')),(r || r2 || pk2 || en)),(r3 || r4)),h((a || b || dl)))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gEcSecretK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (k = r1) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gEcSecretK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> EcPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gEcShare(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> EcPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gEcShare(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> EcPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gEcShare(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gPqSecretK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gPqSecretK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gPqShare(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gPqShare(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gPqShare(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> SignPriK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gSign(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> SignPriK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gSign(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> SignPriK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(gSign(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op s : -> Sys .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(helloReq(s,r1,r5),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq r1 = ca .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(rvSignK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 = ca) = false .
  eq (signPriK(r1) \in' scrLeaked(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(rvSignK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 = ca) = false .
  eq (signPriK(r1) \in' scrLeaked(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(rvSignK(s,r1),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq (cfM(r1,r5,r6,enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18)))) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq (cfM(r1,r5,r6,enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18)))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r17 || r18),r19) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18)))) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Rand .
  op s : -> Sys .
  eq (sh2M(r5,r5,r1,(r6 || r9 || r8 || r10)) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sChangeCS2(s,r1,r5,r6,r7,r8,r9,r10),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Rand .
  op s : -> Sys .
  eq (sh2M(r5,r5,r1,(r6 || r9 || r8 || r10)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sChangeCS2(s,r1,r5,r6,r7,r8,r9,r10),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suite .
  op r9 : -> Sid .
  op s : -> Sys .
  eq (shM(r5,r5,r1,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(scert(s,r1,r5,r6,r7,r8,r9),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suite .
  op r9 : -> Sid .
  op s : -> Sys .
  eq (shM(r5,r5,r1,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(scert(s,r1,r5,r6,r7,r8,r9),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq (cfM(r1,r5,r6,enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18)))) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq (cfM(r1,r5,r6,enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18)))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r17 || r18),r19) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r17 || r18),r19) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18))) .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> EcPublicK .
  op r18 : -> PqCipher .
  op r19 : -> Nat .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r20 = enc(hsckey(ms(((r14 | ecSecret(r17)) || decaps(r18,r15)),(r8 || r11 || r17 || r18)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || r18)))) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq r5 = intru .
  eq ss(s,r6,intru,r9) = session(server,r11,r12) .
  eq (ch2M(r1,intru,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,intru,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq r5 = intru .
  eq ss(s,r6,intru,r9) = session(server,r11,r12) .
  eq (ch2M(r1,intru,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,intru,(r7 || r13 || r9 || r11)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq r5 = intru .
  eq ss(s,r6,intru,r9) = session(server,r11,r12) .
  eq (ch2M(r1,intru,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq r5 = intru .
  eq (ss(s,r6,intru,r9) = session(server,r11,r12)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq (r5 = intru) = false .
  eq r6 = intru .
  eq ss(s,intru,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,intru,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(intru,intru,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq (r5 = intru) = false .
  eq r6 = intru .
  eq ss(s,intru,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,intru,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(intru,intru,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq (r5 = intru) = false .
  eq r6 = intru .
  eq ss(s,intru,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,intru,(r7 || r8 || r9 || r10)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq (r5 = intru) = false .
  eq r6 = intru .
  eq (ss(s,intru,r5,r9) = session(server,r11,r12)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq (r5 = intru) = false .
  eq (r6 = intru) = false .
  eq dl = (r9 || r11 || r7 || r8 || r10 || r13) .
  eq r12 = ms(((k | ecSecret(pk2)) || decaps(en,k')),(r || r2 || pk2 || en)) .
  eq (k \in knl(s)) = true .
  eq (sf2M(r6,r6,r5,enc(hsskey2(ms(((k | ecSecret(pk2)) || decaps(en,k')),(r || r2 || pk2 || en)),(r8 || r13)),h((r5 || r6 || r9 || r11 || r7 || r8 || r10 || r13)))) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true, use se-lm7 as a lemma
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq (r5 = intru) = false .
  eq (r6 = intru) = false .
  eq dl = (r9 || r11 || r7 || r8 || r10 || r13) .
  eq r12 = ms(((k | ecSecret(pk2)) || decaps(en,k')),(r || r2 || pk2 || en)) .
  eq (k \in knl(s)) = true .
  eq (sf2M(r6,r6,r5,enc(hsskey2(ms(((k | ecSecret(pk2)) || decaps(en,k')),(r || r2 || pk2 || en)),(r8 || r13)),h((r5 || r6 || r9 || r11 || r7 || r8 || r10 || r13)))) \in nw(s)) = false .
  red se-lm7(s,r6,r5,k,k',pk2,en,r,r2,r9,r11) implies (se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl)) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq (r5 = intru) = false .
  eq (r6 = intru) = false .
  eq dl = (r9 || r11 || r7 || r8 || r10 || r13) .
  eq r12 = ms(((k | ecSecret(pk2)) || decaps(en,k')),(r || r2 || pk2 || en)) .
  eq (k \in knl(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq (r5 = intru) = false .
  eq (r6 = intru) = false .
  eq dl = (r9 || r11 || r7 || r8 || r10 || r13) .
  eq (r12 = ms(((k | ecSecret(pk2)) || decaps(en,k')),(r || r2 || pk2 || en))) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq r3 = r8 .
  eq (r5 = intru) = false .
  eq (r6 = intru) = false .
  eq (dl = (r9 || r11 || r7 || r8 || r10 || r13)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq r4 = r13 .
  eq (r3 = r8) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq b = r6 .
  eq (r4 = r13) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq a = r5 .
  eq (b = r6) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  eq (a = r5) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq (ss(s,r6,r5,r9) = session(server,r11,r12)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Version .
  op r11 : -> Rand .
  op r12 : -> Suites .
  op r13 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suite .
  op r6 : -> Sid .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Prin .
  op s : -> Sys .
  eq contains(r12,r5) = true .
  eq (r1 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shello(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Version .
  op r11 : -> Rand .
  op r12 : -> Suites .
  op r13 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suite .
  op r6 : -> Sid .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Prin .
  op s : -> Sys .
  eq contains(r12,r5) = true .
  eq (r1 \in udata(s)) = false .
  eq (r6 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shello(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Version .
  op r11 : -> Rand .
  op r12 : -> Suites .
  op r13 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suite .
  op r6 : -> Sid .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Prin .
  op s : -> Sys .
  eq contains(r12,r5) = true .
  eq (r1 \in udata(s)) = false .
  eq (r6 \in udata(s)) = false .
  eq (chM(r7,r8,r9,(r10 || r11 || r12 || r13)) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shello(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Version .
  op r11 : -> Rand .
  op r12 : -> Suites .
  op r13 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suite .
  op r6 : -> Sid .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Prin .
  op s : -> Sys .
  eq contains(r12,r5) = true .
  eq (r1 \in udata(s)) = false .
  eq (r6 \in udata(s)) = false .
  eq (chM(r7,r8,r9,(r10 || r11 || r12 || r13)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shello(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Version .
  op r11 : -> Rand .
  op r12 : -> Suites .
  op r13 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suite .
  op r6 : -> Sid .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Prin .
  op s : -> Sys .
  eq contains(r12,r5) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shello(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Sid .
  op r11 : -> Suites .
  op r12 : -> Suite .
  op r13 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r11,r12) = true .
  eq (r1 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shello2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Sid .
  op r11 : -> Suites .
  op r12 : -> Suite .
  op r13 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r11,r12) = true .
  eq (r1 \in udata(s)) = false .
  eq ss(s,r7,r6,r10) = session(server,r12,r13) .
  eq (ch2M(r5,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shello2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Sid .
  op r11 : -> Suites .
  op r12 : -> Suite .
  op r13 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r11,r12) = true .
  eq (r1 \in udata(s)) = false .
  eq ss(s,r7,r6,r10) = session(server,r12,r13) .
  eq (ch2M(r5,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shello2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Sid .
  op r11 : -> Suites .
  op r12 : -> Suite .
  op r13 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r11,r12) = true .
  eq (r1 \in udata(s)) = false .
  eq (ss(s,r7,r6,r10) = session(server,r12,r13)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shello2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Sid .
  op r11 : -> Suites .
  op r12 : -> Suite .
  op r13 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r11,r12) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shello2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Rand .
  op r7 : -> Rand .
  op r8 : -> EcSecretK .
  op r9 : -> PqSecretK .
  op s : -> Sys .
  eq (skexM(r5,r5,r1,(ecPublic(r8) || keygen(r9) || sign(signPriK(r5),h((r6 || r7 || ecPublic(r8) || keygen(r9))))),r10) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shelloDone(s,r1,r5,r6,r7,r8,r9,r10),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Rand .
  op r7 : -> Rand .
  op r8 : -> EcSecretK .
  op r9 : -> PqSecretK .
  op s : -> Sys .
  eq (skexM(r5,r5,r1,(ecPublic(r8) || keygen(r9) || sign(signPriK(r5),h((r6 || r7 || ecPublic(r8) || keygen(r9))))),r10) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(shelloDone(s,r1,r5,r6,r7,r8,r9,r10),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (chM(r6,r7,r8,(r9 || r10 || r11 || r12)) \in nw(s)) = true .
  eq (shM(r8,r8,r7,(r9 || r13 || r14 || r15)) \in nw(s)) = true .
  eq (certM(r8,r8,r7,(r8 || signPubK(r8) || sign(signPriK(ca),h((r8 || signPubK(r8)))))) \in nw(s)) = true .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (chM(r6,r7,r8,(r9 || r10 || r11 || r12)) \in nw(s)) = true .
  eq (shM(r8,r8,r7,(r9 || r13 || r14 || r15)) \in nw(s)) = true .
  eq (certM(r8,r8,r7,(r8 || signPubK(r8) || sign(signPriK(ca),h((r8 || signPubK(r8)))))) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (chM(r6,r7,r8,(r9 || r10 || r11 || r12)) \in nw(s)) = true .
  eq (shM(r8,r8,r7,(r9 || r13 || r14 || r15)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op en : -> PqCipher .
  op k : -> EcSecretK .
  op k' : -> PqSecretK .
  op pk2 : -> EcPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (chM(r6,r7,r8,(r9 || r10 || r11 || r12)) \in nw(s)) = false .
  red se-lm6(s,a,b,k,k',pk2,en,r,r2,r3,r4,dl) implies se-lm6(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,k,k',pk2,en,r,r2,r3,r4,dl) .
close

--> Time taken is 2357ms