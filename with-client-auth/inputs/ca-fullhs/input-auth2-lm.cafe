ipsgopen PROP-CA-FULLHS-PQSAFE .
  generate auth2-lm1(S:Sys, A:Prin,B:Prin,A2:Prin,?B:Prin, 
    K:EcSecretK,K':PqSecretK,K2:EcSecretK,EN:PqCipher, 
    R:Rand,R2:Rand, CSPK:ClSignPubK,SIGN3:Data,DL:DataL, ?M:Nat)
  induction on S:Sys .
close
set-output with-client-auth/ca-fullhs/auth2-lm/auth2-lm1.cafe .
:save-proof .
-- eof

ipsgopen PROP-CA-FULLHS .
  generate auth2-lm2(S:Sys, A:Prin,B:Prin,K:EcSecretK,K':PqSecretK,
    K2:EcSecretK,EN:PqCipher, R:Rand,R2:Rand, 
    CSPK:ClSignPubK,PSPK:PqSignPubK,SIGN:Data,SIGN2:Data,DL:DataL, ?M:Nat)
  induction on S:Sys .
close
set-output with-client-auth/ca-fullhs/auth2-lm/auth2-lm2.cafe .
:save-proof .
-- eof

ipsgopen PROP-CA-FULLHS .
  generate auth2-lm3(S:Sys, A:Prin,B:Prin,K:EcSecretK,K':PqSecretK,
    PK2:EcPublicK,EN:PqCipher, R:Rand,R2:Rand, 
    CSPK:ClSignPubK,PSPK:PqSignPubK,SIGN:Data,SIGN2:Data,DL:DataL)
  induction on S:Sys .
close
set-output with-client-auth/ca-fullhs/auth2-lm/auth2-lm3.cafe .
:save-proof .
eof

load common.cafe protocol.cafe .
load with-client-auth/pqtls-ca.cafe .
load with-client-auth/properties-fullhs.cafe .
load with-client-auth/properties-ca-fullhs.cafe .
load with-client-auth/inputs/ca-fullhs/input-auth2-lm.cafe .
