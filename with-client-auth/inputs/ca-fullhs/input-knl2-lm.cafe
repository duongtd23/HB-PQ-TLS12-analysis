ipsgopen PROP-CA-FULLHS .
  generate knl2-lm1(S:Sys, K':PqSecretK,EN:PqCipher)
  induction on S:Sys .
close
set-output with-client-auth/ca-fullhs/knl2-lm/knl2-lm1.cafe .
:save-proof .
-- eof

ipsgopen PROP-CA-FULLHS .
  inv scrused2-lm1(S:Sys, EN:PqCipher,K':PqSecretK) .
  generate knl2-lm3(S:Sys, K:EcSecretK,K':PqSecretK,
    K2:EcSecretK,EN:PqCipher, R:Rand,R2:Rand)
  induction on S:Sys .
close
set-output with-client-auth/ca-fullhs/knl2-lm/knl2-lm3.cafe .
:save-proof .
-- eof

ipsgopen PROP-CA-FULLHS-PQSAFE .
  inv inv2(S:Sys, A:Prin) .
  inv scrused-lm2(S:Sys, K':PqSecretK) .
  inv scrused-lm3(S:Sys, A:Prin,B:Prin,A2:Prin, PK:EcPublicK,EN:PqCipher, N:Nat) .
  inv ephSe(S:Sys, A:Prin,B:Prin, PK':PqPublicK,K2:EcSecretK,K2':PqSecretK, N:Nat) .
  inv knl2-lm6(S:Sys, A:Prin,B:Prin,A2:Prin, K:EcSecretK,K':PqSecretK,
    PK2:EcPublicK,EN:PqCipher, R:Rand,R2:Rand, CSPK:ClSignPubK, 
    SIGN3:Data,DL:DataL) .
  generate knl2-lm4(S:Sys, A:Prin,B:Prin,A2:Prin, K:EcSecretK,K':PqSecretK,
    PK2:EcPublicK,EN:PqCipher, R:Rand,R2:Rand, CSPK:ClSignPubK, 
    SIGN3:Data,DL:DataL,N2:Nat)
  induction on S:Sys .
close
set-output with-client-auth/ca-fullhs/knl2-lm/knl2-lm4.cafe .
:save-proof .
-- eof

ipsgopen PROP-CA-FULLHS-PQSAFE .
  inv scrused-lm3(S:Sys, A:Prin,B:Prin,A2:Prin, PK:EcPublicK,EN:PqCipher, N:Nat) .
  inv ephSe(S:Sys, A:Prin,B:Prin, PK':PqPublicK,K2:EcSecretK,K2':PqSecretK, N:Nat) .
  generate knl2-lm6(S:Sys, A:Prin,B:Prin,A2:Prin, K:EcSecretK,K':PqSecretK,
    PK2:EcPublicK,EN:PqCipher, R:Rand,R2:Rand, CSPK:ClSignPubK, 
    SIGN3:Data,DL:DataL)
  induction on S:Sys .
close
set-output with-client-auth/ca-fullhs/knl2-lm/knl2-lm6.cafe .
:save-proof .
eof

load common.cafe protocol.cafe .
load with-client-auth/pqtls-ca.cafe .
load with-client-auth/properties-fullhs.cafe .
load with-client-auth/properties-ca-fullhs.cafe .
load with-client-auth/inputs/ca-fullhs/input-knl2-lm.cafe .
