ipsgopen PROP-FULLHS .
  generate ltkSe(S:Sys, A:Prin)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/ltkSe.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS-PQSAFE .
  inv scrused-lm2(S:Sys, K':PqSecretK) .
  inv scrused-lm3(S:Sys, A:Prin,B:Prin,B2:Prin, PK:EcPublicK,EN:PqCipher, N:Nat) .
  generate ephSe(S:Sys, A:Prin,B:Prin, PK':PqPublicK, 
    K2:EcSecretK,K2':PqSecretK, N:Nat)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/ephSe.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS-PQSAFE .
  inv inv3(S:Sys) .
  generate inv1(S:Sys,B:Prin, PSPK:PqSignPubK)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/se-lm/inv1.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS-PQSAFE .
  generate inv2(S:Sys, A:Prin)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/se-lm/inv2.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS .
  generate inv3(S:Sys)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/se-lm/inv3.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS-PQSAFE .
  inv inv3(S:Sys) .
  inv inv1(S:Sys,B:Prin, PSPK:PqSignPubK) .
  generate inv4(S:Sys, A:Prin,B:Prin,B2:Prin, CSPK:ClSignPubK,PSPK:PqSignPubK)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/se-lm/inv4.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS .
  generate se-lm1(S:Sys, A:Prin,B:Prin,?B2:Prin, PK:EcPublicK,PK':PqPublicK, 
    K2:EcSecretK,K2':PqSecretK, R:Rand,R2:Rand, CSPK:ClSignPubK,PSPK:PqSignPubK,
    SIGN:Data,SIGN2:Data,SIGN3:Data,SIGN4:Data,DL:DataL, ?N:Nat,?N2:Nat)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/se-lm/se-lm1.cafe .
:save-proof .
eof

load common.cafe protocol.cafe .
load no-client-auth/pqtls-noca.cafe no-client-auth/properties-full-hs.cafe .
load no-client-auth/inputs/full-hs/input-se-lm.cafe .
