ipsgopen PROP-FULLHS-PQSAFE .
  inv ltkSe(S:Sys, A:Prin) .
  generate auth-lm1(S:Sys, A:Prin,B:Prin,B2:Prin,?A:Prin, 
    PK:EcPublicK,PK':PqPublicK,
    R:Rand,R2:Rand, SIGN3:Data, N:Nat,?M:Nat)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/auth-lm/auth-lm1.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS .
  generate auth-lm2(S:Sys, A:Prin,B:Prin,K:EcSecretK,K':PqSecretK, 
    K2:EcSecretK,K2':PqSecretK, R:Rand,R2:Rand, CSPK:ClSignPubK,PSPK:PqSignPubK,
    SIGN:Data,SIGN2:Data,SIGN3:Data,SIGN4:Data,DL:DataL,?M:Nat)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/auth-lm/auth-lm2.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS .
  generate auth-lm3(S:Sys, A:Prin,B:Prin, PK:EcPublicK,PK':PqPublicK,
    K2:EcSecretK,K2':PqSecretK, R:Rand,R2:Rand, CSPK:ClSignPubK,PSPK:PqSignPubK,
    SIGN:Data,SIGN2:Data,SIGN3:Data,SIGN4:Data,DL:DataL)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/auth-lm/auth-lm3.cafe .
:save-proof .
eof

load common.cafe protocol.cafe .
load no-client-auth/pqtls-noca.cafe no-client-auth/properties-full-hs.cafe .
load no-client-auth/inputs/full-hs/input-auth-lm.cafe .
