ipsgopen PROP-FULLHS .
  inv scrused-lm4(S:Sys, PK':PqPublicK) .
  inv scrused-lm7(S:Sys, PK:EcPublicK) .
  generate scrused-lm1(S:Sys, A:Prin,B:Prin,B2:Prin, 
    PK:EcPublicK, PK':PqPublicK, SIGN3:Data,SIGN4:Data, N:Nat)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/scrused-lm/scrused-lm1.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS .
  inv scrused-lm4(S:Sys, PK':PqPublicK) .
  inv scrused-lm8(S:Sys, EN:PqCipher) .
  generate scrused-lm2(S:Sys, K':PqSecretK)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/scrused-lm/scrused-lm2.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS .
  inv scrused-lm1(S:Sys, A:Prin,B:Prin,B2:Prin, 
    PK:EcPublicK, PK':PqPublicK, SIGN3:Data,SIGN4:Data, N:Nat) .
  inv scrused-lm7(S:Sys, PK:EcPublicK) .
  inv scrused-lm8(S:Sys, EN:PqCipher) .
  generate scrused-lm3(S:Sys, A:Prin,B:Prin,A2:Prin, 
    PK:EcPublicK, EN:PqCipher, N:Nat)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/scrused-lm/scrused-lm3.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS .
  generate scrused-lm4(S:Sys, PK':PqPublicK)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/scrused-lm/scrused-lm4.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS .
  inv scrused-lm6(S:Sys, PK:EcPublicK,PK':PqPublicK, R:Rand,R2:Rand) .
  generate scrused-lm5(S:Sys, B:Prin, PK:EcPublicK,PK':PqPublicK, R:Rand,R2:Rand)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/scrused-lm/scrused-lm5.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS .
  inv scrused-lm4(S:Sys, PK':PqPublicK) .
  inv scrused-lm7(S:Sys, PK:EcPublicK) .
  generate scrused-lm6(S:Sys, PK:EcPublicK,PK':PqPublicK, R:Rand,R2:Rand)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/scrused-lm/scrused-lm6.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS .
  generate scrused-lm7(S:Sys, PK:EcPublicK)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/scrused-lm/scrused-lm7.cafe .
:save-proof .
-- eof

ipsgopen PROP-FULLHS .
  inv scrused-lm1(S:Sys, A:Prin,B:Prin,B2:Prin, 
    PK:EcPublicK, PK':PqPublicK, SIGN3:Data,SIGN4:Data, N:Nat) .
  inv scrused-lm2(S:Sys, K':PqSecretK) .
  inv scrused-lm4(S:Sys, PK':PqPublicK) .
  generate scrused-lm8(S:Sys, EN:PqCipher)
  induction on S:Sys .
close
set-output no-client-auth/full-hs/scrused-lm/scrused-lm8.cafe .
:save-proof .
eof

load common.cafe protocol.cafe .
load no-client-auth/pqtls-noca.cafe no-client-auth/properties-full-hs.cafe .
load no-client-auth/inputs/full-hs/input-scrused-lm.cafe .
