--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r2 : -> Rand .
  op s : -> Sys .
  red knl-lm4$(init,b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(brkClSign(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcPublicK .
  op r2 : -> Rand .
  op s : -> Sys .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(brkECDH(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqPublicK .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(brkKEM(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqPublicK .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(brkKEM(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqCipher .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(brkKEM2(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqCipher .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(brkKEM2(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(brkPqSign(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> PqPublicK .
  op r5 : -> EcSecretK .
  op r6 : -> PqSecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (ckexM(r1,r1,r3,(ecPublic(r5) || encapsC(r4,r6)),r7) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cChangeCS(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> PqPublicK .
  op r5 : -> EcSecretK .
  op r6 : -> PqSecretK .
  op r7 : -> Nat .
  op s : -> Sys .
  eq (ckexM(r1,r1,r3,(ecPublic(r5) || encapsC(r4,r6)),r7) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cChangeCS(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = true .
  eq (sf2M(r8,r3,r1,enc(hsskey2(r10,(r5 || r11)),h((r1 || r3 || r6 || r9 || r4 || r5 || r7 || r11)))) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cChangeCS2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = true .
  eq (sf2M(r8,r3,r1,enc(hsskey2(r10,(r5 || r11)),h((r1 || r3 || r6 || r9 || r4 || r5 || r7 || r11)))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cChangeCS2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cChangeCS2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cChangeCS2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  eq (ss(s,r1,r3,r6) = session(client,r9,r10)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cChangeCS2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq r24 = enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22)))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r16 || r17 || r18 || r19),r20) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r21) || encapsC(r17,r22)),r23) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r3,enc(hsckey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22))))) \in nw(s)) = true .
  eq (sfM(r8,r3,r1,enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22))))) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq r24 = enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22)))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r16 || r17 || r18 || r19),r20) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r21) || encapsC(r17,r22)),r23) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r3,enc(hsckey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22))))) \in nw(s)) = true .
  eq (sfM(r8,r3,r1,enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22))))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq r24 = enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22)))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r16 || r17 || r18 || r19),r20) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r21) || encapsC(r17,r22)),r23) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r3,enc(hsckey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22))))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq r24 = enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22)))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r16 || r17 || r18 || r19),r20) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r21) || encapsC(r17,r22)),r23) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq r24 = enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22)))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r16 || r17 || r18 || r19),r20) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r21) || encapsC(r17,r22)),r23) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq r24 = enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22)))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r16 || r17 || r18 || r19),r20) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq r24 = enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22)))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq r24 = enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22)))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq r24 = enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22)))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq r24 = enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22)))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq (r24 = enc(hsskey(ms(((r21 | ecSecret(r16)) || (pqSecret(r17) & r22)),(r5 || r9 || ecPublic(r21) || encapsC(r17,r22))),(r5 || r9)),h((r1 || r3 || r11 || r4 || r5 || r6 || r7 || r9 || r10 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))) || r16 || r17 || r18 || r19 || ecPublic(r21) || encapsC(r17,r22))))) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq (r15 = pqsign(pqSignPriK(ca),h((r3 || r14)))) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq (r13 = clsign(clSignPriK(ca),h((r3 || r12)))) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ccomp(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r16 || r17 || r18 || r19),r20) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r21) || encapsC(r17,r22)),r23) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))))) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r16 || r17 || r18 || r19),r20) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r21) || encapsC(r17,r22)),r23) \in nw(s)) = true .
  eq (certM(r8,r3,r1,(r3 || r12 || clsign(clSignPriK(ca),h((r3 || r12))) || r14 || pqsign(pqSignPriK(ca),h((r3 || r14))))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r16 || r17 || r18 || r19),r20) \in nw(s)) = true .
  eq (ckexM(r1,r1,r3,(ecPublic(r21) || encapsC(r17,r22)),r23) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (skexM(r8,r3,r1,(r16 || r17 || r18 || r19),r20) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (shM(r8,r3,r1,(r4 || r9 || r10 || r11)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = true .
  eq (chM(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = true .
  eq pqverify(r14,h((r5 || r9 || r16 || r17)),r19) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq r15 = pqsign(pqSignPriK(ca),h((r3 || r14))) .
  eq clverify(r12,h((r5 || r9 || r16 || r17)),r18) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r13 = clsign(clSignPriK(ca),h((r3 || r12))) .
  eq (r15 = pqsign(pqSignPriK(ca),h((r3 || r14)))) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> ClSignPubK .
  op r13 : -> Data .
  op r14 : -> PqSignPubK .
  op r15 : -> Data .
  op r16 : -> EcPublicK .
  op r17 : -> PqPublicK .
  op r18 : -> Data .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> Nat .
  op r21 : -> EcSecretK .
  op r22 : -> PqSecretK .
  op r23 : -> Nat .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op r8 : -> Prin .
  op r9 : -> Rand .
  op s : -> Sys .
  eq (r13 = clsign(clSignPriK(ca),h((r3 || r12)))) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = true .
  eq (sf2M(r8,r3,r1,enc(hsskey2(r10,(r5 || r11)),h((r1 || r3 || r6 || r9 || r4 || r5 || r7 || r11)))) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = true .
  eq (sf2M(r8,r3,r1,enc(hsskey2(r10,(r5 || r11)),h((r1 || r3 || r6 || r9 || r4 || r5 || r7 || r11)))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  eq (sh2M(r8,r3,r1,(r4 || r11 || r6 || r9)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  eq ss(s,r1,r3,r6) = session(client,r9,r10) .
  eq (ch2M(r1,r1,r3,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Prin .
  op r9 : -> Suite .
  op s : -> Sys .
  eq (ss(s,r1,r3,r6) = session(client,r9,r10)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(cfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op s : -> Sys .
  eq (r5 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(chello(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suites .
  op r7 : -> PqKemParams .
  op s : -> Sys .
  eq (r5 \in udata(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(chello(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Suite .
  op r9 : -> Data .
  op s : -> Sys .
  eq contains(r7,r8) = true .
  eq (r5 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(chello2(s,r1,r3,r4,r5,r6,r7,r8,r9),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Suite .
  op r9 : -> Data .
  op s : -> Sys .
  eq contains(r7,r8) = true .
  eq (r5 \in udata(s)) = false .
  eq ss(s,r1,r3,r6) = session(client,r8,r9) .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(chello2(s,r1,r3,r4,r5,r6,r7,r8,r9),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Suite .
  op r9 : -> Data .
  op s : -> Sys .
  eq contains(r7,r8) = true .
  eq (r5 \in udata(s)) = false .
  eq (ss(s,r1,r3,r6) = session(client,r8,r9)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(chello2(s,r1,r3,r4,r5,r6,r7,r8,r9),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Suites .
  op r8 : -> Suite .
  op r9 : -> Data .
  op s : -> Sys .
  eq contains(r7,r8) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(chello2(s,r1,r3,r4,r5,r6,r7,r8,r9),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> ClSignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = clsign(clSignPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (r1 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> ClSignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = clsign(clSignPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> ClSignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = clsign(clSignPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq clverify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq (chM(r4,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r4,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r4,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (certM(r10,r5,r4,(r5 || r14 || clsign(clSignPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> ClSignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = clsign(clSignPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq clverify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq (chM(r4,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r4,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r4,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (certM(r10,r5,r4,(r5 || r14 || clsign(clSignPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> ClSignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = clsign(clSignPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq clverify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq (chM(r4,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r4,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r4,(r18 || r19 || r20 || r21),r22) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> ClSignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = clsign(clSignPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq clverify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq (chM(r4,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r4,(r6 || r11 || r12 || r13)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> ClSignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = clsign(clSignPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq clverify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq (chM(r4,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> ClSignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = clsign(clSignPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq clverify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> ClSignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = clsign(clSignPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq clverify(r14,h((r7 || r11 || r18 || r19)),r20) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> ClSignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = clsign(clSignPriK(ca),h((r5 || r14))) .
  eq (r17 = pqsign(pqSignPriK(ca),h((r5 || r16)))) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> ClSignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq (r15 = clsign(clSignPriK(ca),h((r5 || r14)))) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(ckeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqCipher .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkCkeyex(s,r1,r3,r4,r5),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqCipher .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkCkeyex(s,r1,r3,r4,r5),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqCipher .
  op s : -> Sys .
  eq (r4 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkCkeyex(s,r1,r3,r4,r5),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkFinish(s,r1,r3,r4),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkFinish(s,r1,r3,r4),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> DataL .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkHello(s,r1,r3,r4),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> DataL .
  op s : -> Sys .
  eq (r4 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkHello(s,r1,r3,r4),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op s : -> Sys .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkNoti(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> ClSignPubK .
  op r5 : -> Data .
  op r6 : -> PqSignPubK .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkScert(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> ClSignPubK .
  op r5 : -> Data .
  op r6 : -> PqSignPubK .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkScert(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> ClSignPubK .
  op r5 : -> Data .
  op r6 : -> PqSignPubK .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkScert(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> ClSignPubK .
  op r5 : -> Data .
  op r6 : -> PqSignPubK .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkScert(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> ClSignPubK .
  op r5 : -> Data .
  op r6 : -> PqSignPubK .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkScert(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqPublicK .
  op r6 : -> Data .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkSkeyex(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqPublicK .
  op r6 : -> Data .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkSkeyex(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqPublicK .
  op r6 : -> Data .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  eq (r6 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkSkeyex(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqPublicK .
  op r6 : -> Data .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkSkeyex(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> EcPublicK .
  op r5 : -> PqPublicK .
  op r6 : -> Data .
  op r7 : -> Data .
  op s : -> Sys .
  eq (r4 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(fkSkeyex(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(g1(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(g1(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(g21(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(g21(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(g21(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(g22(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(g22(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(g22(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(g23(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(g23(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(g23(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Version .
  op r2 : -> Rand .
  op r3 : -> Suites .
  op r4 : -> Suite .
  op r5 : -> ClSignPubK .
  op r6 : -> Prin .
  op r7 : -> PqKemParams .
  op s : -> Sys .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gBasic(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gBasic2(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gBasic2(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gBasic2(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqCipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gDecaps(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqCipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gDecaps(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqCipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gDecaps(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gEcSecretK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq b = intru .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gEcSecretK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (b = intru) = false .
  eq ecSecret(pk) = r1 .
  eq (r1 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gEcSecretK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (b = intru) = false .
  eq ecSecret(pk) = r1 .
  eq (r1 \in knl(s)) = false .
  eq (clSignPriK(b) \in' scrLeaked(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gEcSecretK(s,r1),b,pk,pk',r,r2) .
close

--> true, use scrused-lm5 as a lemma
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (b = intru) = false .
  eq ecSecret(pk) = r1 .
  eq (r1 \in knl(s)) = false .
  eq (clSignPriK(b) \in' scrLeaked(s)) = false .
  eq (clsign(clSignPriK(b),h((r || r2 || pk || pk'))) \in knl(s)) = true .
  red scrused-lm5(s,b,pk,pk',r,r2) implies (knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gEcSecretK(s,r1),b,pk,pk',r,r2)) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (b = intru) = false .
  eq ecSecret(pk) = r1 .
  eq (r1 \in knl(s)) = false .
  eq (clSignPriK(b) \in' scrLeaked(s)) = false .
  eq (clsign(clSignPriK(b),h((r || r2 || pk || pk'))) \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gEcSecretK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (b = intru) = false .
  eq (ecSecret(pk) = r1) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gEcSecretK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> EcPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gEcShare(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> EcPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gEcShare(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> EcPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gEcShare(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gPqSecretK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gPqSecretK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gPqShare(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gPqShare(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> PqPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gPqShare(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gPqSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gPqSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gPqSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> ClSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq b = intru .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> ClSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (b = intru) = false .
  eq r1 = clSignPriK(b) .
  eq (clSignPriK(b) \in knl(s)) = true .
  eq r3 = h((r || r2 || pk || pk')) .
  eq (h((r || r2 || pk || pk')) \in knl(s)) = true .
  eq (ecSecret(pk) \in knl(s)) = true .
  eq (clSignPriK(b) \in' scrLeaked(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> ClSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (b = intru) = false .
  eq r1 = clSignPriK(b) .
  eq (clSignPriK(b) \in knl(s)) = true .
  eq r3 = h((r || r2 || pk || pk')) .
  eq (h((r || r2 || pk || pk')) \in knl(s)) = true .
  eq (ecSecret(pk) \in knl(s)) = true .
  eq (clSignPriK(b) \in' scrLeaked(s)) = false .
  eq (clsign(clSignPriK(b),h((r || r2 || pk || pk'))) \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true, use ltkSe as a lemma
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> ClSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (b = intru) = false .
  eq r1 = clSignPriK(b) .
  eq (clSignPriK(b) \in knl(s)) = true .
  eq r3 = h((r || r2 || pk || pk')) .
  eq (h((r || r2 || pk || pk')) \in knl(s)) = true .
  eq (ecSecret(pk) \in knl(s)) = true .
  eq (clSignPriK(b) \in' scrLeaked(s)) = false .
  eq (clsign(clSignPriK(b),h((r || r2 || pk || pk'))) \in knl(s)) = false .
  red ltkSe(s,b) implies (knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gSign(s,r1,r3),b,pk,pk',r,r2)) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> ClSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (b = intru) = false .
  eq r1 = clSignPriK(b) .
  eq (clSignPriK(b) \in knl(s)) = true .
  eq r3 = h((r || r2 || pk || pk')) .
  eq (h((r || r2 || pk || pk')) \in knl(s)) = true .
  eq (ecSecret(pk) \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> ClSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (b = intru) = false .
  eq r1 = clSignPriK(b) .
  eq (clSignPriK(b) \in knl(s)) = true .
  eq r3 = h((r || r2 || pk || pk')) .
  eq (h((r || r2 || pk || pk')) \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> ClSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (b = intru) = false .
  eq r1 = clSignPriK(b) .
  eq (clSignPriK(b) \in knl(s)) = true .
  eq (r3 = h((r || r2 || pk || pk'))) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> ClSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (b = intru) = false .
  eq r1 = clSignPriK(b) .
  eq (clSignPriK(b) \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> ClSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = true .
  eq (b = intru) = false .
  eq (r1 = clSignPriK(b)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> ClSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r3 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> ClSignPriK .
  op r2 : -> Rand .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(gSign(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op s : -> Sys .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(helloReq(s,r1,r3),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  eq r1 = ca .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(rvClSignK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 = ca) = false .
  eq (clSignPriK(r1) \in' scrLeaked(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(rvClSignK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 = ca) = false .
  eq (clSignPriK(r1) \in' scrLeaked(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(rvClSignK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  eq r1 = ca .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(rvPqSignK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 = ca) = false .
  eq (pqSignPriK(r1) \in' scrLeaked(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(rvPqSignK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op s : -> Sys .
  eq (r1 = ca) = false .
  eq (pqSignPriK(r1) \in' scrLeaked(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(rvPqSignK(s,r1),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r15 || r16),r17) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16)))) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r15 || r16),r17) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16)))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r15 || r16),r17) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r15 || r16),r17) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r15 || r16),r17) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq (r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16)))) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sChangeCS(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Rand .
  op r8 : -> Suite .
  op s : -> Sys .
  eq (sh2M(r3,r3,r1,(r4 || r7 || r6 || r8)) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sChangeCS2(s,r1,r3,r4,r5,r6,r7,r8),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Sid .
  op r7 : -> Rand .
  op r8 : -> Suite .
  op s : -> Sys .
  eq (sh2M(r3,r3,r1,(r4 || r7 || r6 || r8)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sChangeCS2(s,r1,r3,r4,r5,r6,r7,r8),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suite .
  op r7 : -> Sid .
  op s : -> Sys .
  eq (shM(r3,r3,r1,(r4 || r5 || r6 || r7)) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(scert(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Version .
  op r5 : -> Rand .
  op r6 : -> Suite .
  op r7 : -> Sid .
  op s : -> Sys .
  eq (shM(r3,r3,r1,(r4 || r5 || r6 || r7)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(scert(s,r1,r3,r4,r5,r6,r7),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r15 || r16),r17) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16)))) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r15 || r16),r17) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = true .
  eq (cfM(r1,r3,r4,enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16)))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r15 || r16),r17) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))))) \in nw(s)) = true .
  eq (skexM(r4,r4,r3,(ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13))))),r14) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r15 || r16),r17) \in nw(s)) = true .
  eq (certM(r4,r4,r3,(r4 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (ckexM(r1,r3,r4,(r15 || r16),r17) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (shM(r4,r4,r3,(r5 || r9 || r10 || r11)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16))) .
  eq (chM(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Sid .
  op r12 : -> EcSecretK .
  op r13 : -> PqSecretK .
  op r14 : -> Nat .
  op r15 : -> EcPublicK .
  op r16 : -> PqCipher .
  op r17 : -> Nat .
  op r18 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Suites .
  op r8 : -> PqKemParams .
  op r9 : -> Rand .
  op s : -> Sys .
  eq (r18 = enc(hsckey(ms(((r12 | ecSecret(r15)) || decaps(r16,r13)),(r6 || r9 || r15 || r16)),(r6 || r9)),h((r3 || r4 || r11 || r5 || r6 || r7 || r8 || r9 || r10 || clSignPubK(r4) || clsign(clSignPriK(ca),h((r4 || clSignPubK(r4)))) || pqSignPubK(r4) || pqsign(pqSignPriK(ca),h((r4 || pqSignPubK(r4)))) || ecPublic(r12) || keygen(r13) || clsign(clSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || pqsign(pqSignPriK(r4),h((r6 || r9 || ecPublic(r12) || keygen(r13)))) || r15 || r16)))) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Sid .
  op r8 : -> Suites .
  op r9 : -> Suite .
  op s : -> Sys .
  eq ss(s,r4,r3,r7) = session(server,r9,r10) .
  eq (ch2M(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (sh2M(r4,r4,r3,(r5 || r11 || r7 || r9)) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Sid .
  op r8 : -> Suites .
  op r9 : -> Suite .
  op s : -> Sys .
  eq ss(s,r4,r3,r7) = session(server,r9,r10) .
  eq (ch2M(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = true .
  eq (sh2M(r4,r4,r3,(r5 || r11 || r7 || r9)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Sid .
  op r8 : -> Suites .
  op r9 : -> Suite .
  op s : -> Sys .
  eq ss(s,r4,r3,r7) = session(server,r9,r10) .
  eq (ch2M(r1,r3,r4,(r5 || r6 || r7 || r8)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Data .
  op r11 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Version .
  op r6 : -> Rand .
  op r7 : -> Sid .
  op r8 : -> Suites .
  op r9 : -> Suite .
  op s : -> Sys .
  eq (ss(s,r4,r3,r7) = session(server,r9,r10)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(sfinish2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Suite .
  op r4 : -> Sid .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r10,r3) = true .
  eq (r1 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shello(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Suite .
  op r4 : -> Sid .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r10,r3) = true .
  eq (r1 \in udata(s)) = false .
  eq (r4 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shello(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Suite .
  op r4 : -> Sid .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r10,r3) = true .
  eq (r1 \in udata(s)) = false .
  eq (r4 \in udata(s)) = false .
  eq (chM(r5,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shello(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Suite .
  op r4 : -> Sid .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r10,r3) = true .
  eq (r1 \in udata(s)) = false .
  eq (r4 \in udata(s)) = false .
  eq (chM(r5,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shello(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Suite .
  op r4 : -> Sid .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r10,r3) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shello(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = true .
  eq (r1 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shello2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = true .
  eq (r1 \in udata(s)) = false .
  eq ss(s,r5,r4,r8) = session(server,r10,r11) .
  eq (ch2M(r3,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shello2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = true .
  eq (r1 \in udata(s)) = false .
  eq ss(s,r5,r4,r8) = session(server,r10,r11) .
  eq (ch2M(r3,r4,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shello2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = true .
  eq (r1 \in udata(s)) = false .
  eq (ss(s,r5,r4,r8) = session(server,r10,r11)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shello2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shello2(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Rand .
  op r5 : -> Rand .
  op r6 : -> EcSecretK .
  op r7 : -> PqSecretK .
  op r8 : -> Nat .
  op s : -> Sys .
  eq (skexM(r3,r3,r1,(ecPublic(r6) || keygen(r7) || clsign(clSignPriK(r3),h((r4 || r5 || ecPublic(r6) || keygen(r7)))) || pqsign(pqSignPriK(r3),h((r4 || r5 || ecPublic(r6) || keygen(r7))))),r8) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shelloDone(s,r1,r3,r4,r5,r6,r7,r8),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Prin .
  op r4 : -> Rand .
  op r5 : -> Rand .
  op r6 : -> EcSecretK .
  op r7 : -> PqSecretK .
  op r8 : -> Nat .
  op s : -> Sys .
  eq (skexM(r3,r3,r1,(ecPublic(r6) || keygen(r7) || clsign(clSignPriK(r3),h((r4 || r5 || ecPublic(r6) || keygen(r7)))) || pqsign(pqSignPriK(r3),h((r4 || r5 || ecPublic(r6) || keygen(r7))))),r8) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(shelloDone(s,r1,r3,r4,r5,r6,r7,r8),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq r = r8 .
  eq r2 = r11 .
  eq r6 = intru .
  eq (chM(r4,r5,intru,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(intru,intru,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(intru,intru,r5,(intru || clSignPubK(intru) || clsign(clSignPriK(ca),h((intru || clSignPubK(intru)))) || pqSignPubK(intru) || pqsign(pqSignPriK(ca),h((intru || pqSignPubK(intru)))))) \in nw(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq r = r8 .
  eq r2 = r11 .
  eq r6 = intru .
  eq (chM(r4,r5,intru,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(intru,intru,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(intru,intru,r5,(intru || clSignPubK(intru) || clsign(clSignPriK(ca),h((intru || clSignPubK(intru)))) || pqSignPubK(intru) || pqsign(pqSignPriK(ca),h((intru || pqSignPubK(intru)))))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq r = r8 .
  eq r2 = r11 .
  eq r6 = intru .
  eq (chM(r4,r5,intru,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(intru,intru,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq r = r8 .
  eq r2 = r11 .
  eq r6 = intru .
  eq (chM(r4,r5,intru,(r7 || r8 || r9 || r10)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq r = r8 .
  eq r2 = r11 .
  eq (r6 = intru) = false .
  eq ecSecret(pk) = r1 .
  eq pqSecret(pk') = r3 .
  eq (r1 \in knl(s)) = true .
  eq (clSignPriK(r6) \in' scrLeaked(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq r = r8 .
  eq r2 = r11 .
  eq (r6 = intru) = false .
  eq ecSecret(pk) = r1 .
  eq pqSecret(pk') = r3 .
  eq (r1 \in knl(s)) = true .
  eq (clSignPriK(r6) \in' scrLeaked(s)) = false .
  eq (clsign(clSignPriK(r6),h((r8 || r11 || pk || pk'))) \in knl(s)) = true .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true, use scrused-lm2$ as a lemma
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq r = r8 .
  eq r2 = r11 .
  eq (r6 = intru) = false .
  eq ecSecret(pk) = r1 .
  eq pqSecret(pk') = r3 .
  eq (r1 \in knl(s)) = true .
  eq (clSignPriK(r6) \in' scrLeaked(s)) = false .
  eq (clsign(clSignPriK(r6),h((r8 || r11 || pk || pk'))) \in knl(s)) = false .
  red scrused-lm2$(s,r1) implies (knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2)) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq r = r8 .
  eq r2 = r11 .
  eq (r6 = intru) = false .
  eq ecSecret(pk) = r1 .
  eq pqSecret(pk') = r3 .
  eq (r1 \in knl(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq r = r8 .
  eq r2 = r11 .
  eq (r6 = intru) = false .
  eq ecSecret(pk) = r1 .
  eq (pqSecret(pk') = r3) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq r = r8 .
  eq r2 = r11 .
  eq (r6 = intru) = false .
  eq (ecSecret(pk) = r1) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq r = r8 .
  eq (r2 = r11) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq b = r6 .
  eq (r = r8) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq (b = r6) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || clSignPubK(r6) || clsign(clSignPriK(ca),h((r6 || clSignPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> true
open PROP-FULLHS-CLSAFE .
  op b : -> Prin .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> PqSecretK .
  op r4 : -> Prin .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r3 \in udata(s)) = false .
  eq (chM(r4,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = false .
  red knl-lm4$(s,b,pk,pk',r,r2) implies knl-lm4$(skeyex(s,r1,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13),b,pk,pk',r,r2) .
close

--> Time taken is 7947ms