--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  red scrused-lm10(init,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcPublicK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(brkECDH(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqPublicK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(brkKEM(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqPublicK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(brkKEM(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqCipher .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(brkKEM2(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqCipher .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(brkKEM2(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(brkPqSign(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(brkSign(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> PqPublicK .
  op r7 : -> EcSecretK .
  op r8 : -> PqSecretK .
  op r9 : -> Nat .
  op s : -> Sys .
  eq (ckexM(r1,r1,r5,(ecPublic(r7) || encapsC(r6,r8)),r9) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cChangeCS(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> PqPublicK .
  op r7 : -> EcSecretK .
  op r8 : -> PqSecretK .
  op r9 : -> Nat .
  op s : -> Sys .
  eq (ckexM(r1,r1,r5,(ecPublic(r7) || encapsC(r6,r8)),r9) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cChangeCS(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cChangeCS2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cChangeCS2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cChangeCS2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cChangeCS2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (ss(s,r1,r5,r8) = session(client,r11,r12)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cChangeCS2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccert(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccert(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccert(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccert(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccert(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccert(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccert(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccert(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r17 = pqsign(pqSignPriK(ca),h((r5 || r16)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccert(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq (r15 = sign(signPriK(ca),h((r5 || r14)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccert(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  eq (certM(r1,r1,r5,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r5,enc(hsckey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24))))) \in nw(s)) = true .
  eq (sfM(r10,r5,r1,enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24))))) \in nw(s)) = true .
  eq (certVerM(r1,r1,r5,(sign(signPriK(r1),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) || pqsign(pqSignPriK(r1),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  eq (certM(r1,r1,r5,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r5,enc(hsckey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24))))) \in nw(s)) = true .
  eq (sfM(r10,r5,r1,enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24))))) \in nw(s)) = true .
  eq (certVerM(r1,r1,r5,(sign(signPriK(r1),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) || pqsign(pqSignPriK(r1),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  eq (certM(r1,r1,r5,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r5,enc(hsckey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24))))) \in nw(s)) = true .
  eq (sfM(r10,r5,r1,enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  eq (certM(r1,r1,r5,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))))) \in nw(s)) = true .
  eq (cfM(r1,r1,r5,enc(hsckey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  eq (certM(r1,r1,r5,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (r26 = enc(hsskey(ms(((r23 | ecSecret(r18)) || (pqSecret(r19) & r24)),(r7 || r11 || ecPublic(r23) || encapsC(r19,r24))),(r7 || r11)),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24))))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r17 = pqsign(pqSignPriK(ca),h((r5 || r16)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq (r15 = sign(signPriK(ca),h((r5 || r14)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ccomp(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Rand .
  op r7 : -> Rand .
  op r8 : -> EcSecretK .
  op r9 : -> PqSecretK .
  op s : -> Sys .
  eq (skexM(r5,r5,r1,(ecPublic(r8) || keygen(r9) || sign(signPriK(r5),h((r6 || r7 || ecPublic(r8) || keygen(r9)))) || pqsign(pqSignPriK(r5),h((r6 || r7 || ecPublic(r8) || keygen(r9))))),r10) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certReq(s,r1,r5,r6,r7,r8,r9,r10),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Nat .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Rand .
  op r7 : -> Rand .
  op r8 : -> EcSecretK .
  op r9 : -> PqSecretK .
  op s : -> Sys .
  eq (skexM(r5,r5,r1,(ecPublic(r8) || keygen(r9) || sign(signPriK(r5),h((r6 || r7 || ecPublic(r8) || keygen(r9)))) || pqsign(pqSignPriK(r5),h((r6 || r7 || ecPublic(r8) || keygen(r9))))),r10) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certReq(s,r1,r5,r6,r7,r8,r9,r10),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  eq (certM(r1,r1,r5,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  eq (certM(r1,r1,r5,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r17 = pqsign(pqSignPriK(ca),h((r5 || r16)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq (r15 = sign(signPriK(ca),h((r5 || r14)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(certVer(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  eq (certM(r1,r1,r5,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))))) \in nw(s)) = true .
  eq (certVerM(r1,r1,r5,(sign(signPriK(r1),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) || pqsign(pqSignPriK(r1),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  eq (certM(r1,r1,r5,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))))) \in nw(s)) = true .
  eq (certVerM(r1,r1,r5,(sign(signPriK(r1),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))) || pqsign(pqSignPriK(r1),h((r1 || r5 || r13 || r6 || r7 || r8 || r9 || r11 || r12 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))) || r18 || r19 || r20 || r21 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))) || ecPublic(r23) || encapsC(r19,r24)))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = true .
  eq (certM(r1,r1,r5,(r1 || signPubK(r1) || sign(signPriK(ca),h((r1 || signPubK(r1)))) || pqSignPubK(r1) || pqsign(pqSignPriK(ca),h((r1 || pqSignPubK(r1)))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = true .
  eq (certM(r10,r5,r1,(r5 || r14 || sign(signPriK(ca),h((r5 || r14))) || r16 || pqsign(pqSignPriK(ca),h((r5 || r16))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = true .
  eq (ckexM(r1,r1,r5,(ecPublic(r23) || encapsC(r19,r24)),r25) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (skexM(r10,r5,r1,(r18 || r19 || r20 || r21),r22) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (shM(r10,r5,r1,(r6 || r11 || r12 || r13)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = true .
  eq (chM(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = true .
  eq verify(r14,h((r7 || r11 || r18 || r19)),r20) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = true .
  eq pqverify(r16,h((r7 || r11 || r18 || r19)),r21) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq r17 = pqsign(pqSignPriK(ca),h((r5 || r16))) .
  eq (certReqM(r10,r5,r1) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq r15 = sign(signPriK(ca),h((r5 || r14))) .
  eq (r17 = pqsign(pqSignPriK(ca),h((r5 || r16)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> SignPubK .
  op r15 : -> Data .
  op r16 : -> PqSignPubK .
  op r17 : -> Data .
  op r18 : -> EcPublicK .
  op r19 : -> PqPublicK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> Data .
  op r22 : -> Nat .
  op r23 : -> EcSecretK .
  op r24 : -> PqSecretK .
  op r25 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq (r15 = sign(signPriK(ca),h((r5 || r14)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq r1 = intru .
  eq ss(s,intru,r5,r8) = session(client,r11,r12) .
  eq (ch2M(intru,intru,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,intru,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,intru,enc(hsskey2(r12,(r7 || r13)),h((intru || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq r1 = intru .
  eq ss(s,intru,r5,r8) = session(client,r11,r12) .
  eq (ch2M(intru,intru,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,intru,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,intru,enc(hsskey2(r12,(r7 || r13)),h((intru || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq r1 = intru .
  eq ss(s,intru,r5,r8) = session(client,r11,r12) .
  eq (ch2M(intru,intru,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,intru,(r6 || r13 || r8 || r11)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq r1 = intru .
  eq ss(s,intru,r5,r8) = session(client,r11,r12) .
  eq (ch2M(intru,intru,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq r1 = intru .
  eq (ss(s,intru,r5,r8) = session(client,r11,r12)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq r5 = intru .
  eq ss(s,r1,intru,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,intru,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,intru,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,intru,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || intru || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq r5 = intru .
  eq ss(s,r1,intru,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,intru,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,intru,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,intru,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || intru || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq r5 = intru .
  eq ss(s,r1,intru,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,intru,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,intru,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq r5 = intru .
  eq ss(s,r1,intru,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,intru,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq r5 = intru .
  eq (ss(s,r1,intru,r8) = session(client,r11,r12)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq dl = (r8 || r11 || r6 || r7 || r9 || r13) .
  eq r12 = ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))) .
  eq (sf2M(r10,r5,r1,enc(hsskey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq (k2 \in udata(s)) = true .
  eq (k2' \in udata(s)) = true .
  eq (ecSecret(pk) \in udata(s)) = true .
  eq (pqSecret(pk') \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq dl = (r8 || r11 || r6 || r7 || r9 || r13) .
  eq r12 = ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))) .
  eq (sf2M(r10,r5,r1,enc(hsskey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq (k2 \in udata(s)) = true .
  eq (k2' \in udata(s)) = true .
  eq (ecSecret(pk) \in udata(s)) = true .
  eq (pqSecret(pk') \in udata(s)) = false .
  eq (cf2M(r1,r1,r5,enc(hsckey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true, use scrused-lm11 as a lemma
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq dl = (r8 || r11 || r6 || r7 || r9 || r13) .
  eq r12 = ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))) .
  eq (sf2M(r10,r5,r1,enc(hsskey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq (k2 \in udata(s)) = true .
  eq (k2' \in udata(s)) = true .
  eq (ecSecret(pk) \in udata(s)) = true .
  eq (pqSecret(pk') \in udata(s)) = false .
  eq (cf2M(r1,r1,r5,enc(hsckey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = false .
  red scrused-lm11(s,r1,r5,pk,pk',k2,k2',r,r2,r8,r11) implies (scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl)) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq dl = (r8 || r11 || r6 || r7 || r9 || r13) .
  eq r12 = ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))) .
  eq (sf2M(r10,r5,r1,enc(hsskey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq (k2 \in udata(s)) = true .
  eq (k2' \in udata(s)) = true .
  eq (ecSecret(pk) \in udata(s)) = false .
  eq (cf2M(r1,r1,r5,enc(hsckey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true, use scrused-lm11 as a lemma
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq dl = (r8 || r11 || r6 || r7 || r9 || r13) .
  eq r12 = ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))) .
  eq (sf2M(r10,r5,r1,enc(hsskey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq (k2 \in udata(s)) = true .
  eq (k2' \in udata(s)) = true .
  eq (ecSecret(pk) \in udata(s)) = false .
  eq (cf2M(r1,r1,r5,enc(hsckey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = false .
  red scrused-lm11(s,r1,r5,pk,pk',k2,k2',r,r2,r8,r11) implies (scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl)) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq dl = (r8 || r11 || r6 || r7 || r9 || r13) .
  eq r12 = ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))) .
  eq (sf2M(r10,r5,r1,enc(hsskey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq (k2 \in udata(s)) = true .
  eq (k2' \in udata(s)) = false .
  eq (cf2M(r1,r1,r5,enc(hsckey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true, use scrused-lm11 as a lemma
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq dl = (r8 || r11 || r6 || r7 || r9 || r13) .
  eq r12 = ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))) .
  eq (sf2M(r10,r5,r1,enc(hsskey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq (k2 \in udata(s)) = true .
  eq (k2' \in udata(s)) = false .
  eq (cf2M(r1,r1,r5,enc(hsckey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = false .
  red scrused-lm11(s,r1,r5,pk,pk',k2,k2',r,r2,r8,r11) implies (scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl)) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq dl = (r8 || r11 || r6 || r7 || r9 || r13) .
  eq r12 = ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))) .
  eq (sf2M(r10,r5,r1,enc(hsskey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq (k2 \in udata(s)) = false .
  eq (cf2M(r1,r1,r5,enc(hsckey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true, use scrused-lm11 as a lemma
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq dl = (r8 || r11 || r6 || r7 || r9 || r13) .
  eq r12 = ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))) .
  eq (sf2M(r10,r5,r1,enc(hsskey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq (k2 \in udata(s)) = false .
  eq (cf2M(r1,r1,r5,enc(hsckey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = false .
  red scrused-lm11(s,r1,r5,pk,pk',k2,k2',r,r2,r8,r11) implies (scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl)) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq dl = (r8 || r11 || r6 || r7 || r9 || r13) .
  eq r12 = ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))) .
  eq (sf2M(r10,r5,r1,enc(hsskey2(ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2'))),(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq dl = (r8 || r11 || r6 || r7 || r9 || r13) .
  eq (r12 = ms(((k2 | ecSecret(pk)) || (pqSecret(pk') & k2')),(r || r2 || ecPublic(k2) || encapsC(pk',k2')))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq r3 = r7 .
  eq (r1 = intru) = false .
  eq (r5 = intru) = false .
  eq (dl = (r8 || r11 || r6 || r7 || r9 || r13)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq r4 = r13 .
  eq (r3 = r7) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq b = r5 .
  eq (r4 = r13) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq a = r1 .
  eq (b = r5) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = true .
  eq (a = r1) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = true .
  eq (sf2M(r10,r5,r1,enc(hsskey2(r12,(r7 || r13)),h((r1 || r5 || r8 || r11 || r6 || r7 || r9 || r13)))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  eq (sh2M(r10,r5,r1,(r6 || r13 || r8 || r11)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq ss(s,r1,r5,r8) = session(client,r11,r12) .
  eq (ch2M(r1,r1,r5,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Prin .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (ss(s,r1,r5,r8) = session(client,r11,r12)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(cfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq (r7 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(chello(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suites .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  eq (r7 \in udata(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(chello(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = true .
  eq (r7 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(chello2(s,r1,r5,r6,r7,r8,r9,r10,r11),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = true .
  eq (r7 \in udata(s)) = false .
  eq ss(s,r1,r5,r8) = session(client,r10,r11) .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(chello2(s,r1,r5,r6,r7,r8,r9,r10,r11),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = true .
  eq (r7 \in udata(s)) = false .
  eq (ss(s,r1,r5,r8) = session(client,r10,r11)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(chello2(s,r1,r5,r6,r7,r8,r9,r10,r11),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r11 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Suites .
  op s : -> Sys .
  eq contains(r9,r10) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(chello2(s,r1,r5,r6,r7,r8,r9,r10,r11),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq r19 = pqsign(pqSignPriK(ca),h((r7 || r18))) .
  eq (r1 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq r19 = pqsign(pqSignPriK(ca),h((r7 || r18))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq r19 = pqsign(pqSignPriK(ca),h((r7 || r18))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (certReqM(r12,r7,r6) \in nw(s)) = true .
  eq pqverify(r18,h((r9 || r13 || r20 || r21)),r23) = true .
  eq verify(r16,h((r9 || r13 || r20 || r21)),r22) = true .
  eq (chM(r6,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (shM(r12,r7,r6,(r8 || r13 || r14 || r15)) \in nw(s)) = true .
  eq (skexM(r12,r7,r6,(r20 || r21 || r22 || r23),r24) \in nw(s)) = true .
  eq (certM(r12,r7,r6,(r7 || r16 || sign(signPriK(ca),h((r7 || r16))) || r18 || pqsign(pqSignPriK(ca),h((r7 || r18))))) \in nw(s)) = true .
  eq (certM(r6,r6,r7,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq r19 = pqsign(pqSignPriK(ca),h((r7 || r18))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (certReqM(r12,r7,r6) \in nw(s)) = true .
  eq pqverify(r18,h((r9 || r13 || r20 || r21)),r23) = true .
  eq verify(r16,h((r9 || r13 || r20 || r21)),r22) = true .
  eq (chM(r6,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (shM(r12,r7,r6,(r8 || r13 || r14 || r15)) \in nw(s)) = true .
  eq (skexM(r12,r7,r6,(r20 || r21 || r22 || r23),r24) \in nw(s)) = true .
  eq (certM(r12,r7,r6,(r7 || r16 || sign(signPriK(ca),h((r7 || r16))) || r18 || pqsign(pqSignPriK(ca),h((r7 || r18))))) \in nw(s)) = true .
  eq (certM(r6,r6,r7,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq r19 = pqsign(pqSignPriK(ca),h((r7 || r18))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (certReqM(r12,r7,r6) \in nw(s)) = true .
  eq pqverify(r18,h((r9 || r13 || r20 || r21)),r23) = true .
  eq verify(r16,h((r9 || r13 || r20 || r21)),r22) = true .
  eq (chM(r6,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (shM(r12,r7,r6,(r8 || r13 || r14 || r15)) \in nw(s)) = true .
  eq (skexM(r12,r7,r6,(r20 || r21 || r22 || r23),r24) \in nw(s)) = true .
  eq (certM(r12,r7,r6,(r7 || r16 || sign(signPriK(ca),h((r7 || r16))) || r18 || pqsign(pqSignPriK(ca),h((r7 || r18))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq r19 = pqsign(pqSignPriK(ca),h((r7 || r18))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (certReqM(r12,r7,r6) \in nw(s)) = true .
  eq pqverify(r18,h((r9 || r13 || r20 || r21)),r23) = true .
  eq verify(r16,h((r9 || r13 || r20 || r21)),r22) = true .
  eq (chM(r6,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (shM(r12,r7,r6,(r8 || r13 || r14 || r15)) \in nw(s)) = true .
  eq (skexM(r12,r7,r6,(r20 || r21 || r22 || r23),r24) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq r19 = pqsign(pqSignPriK(ca),h((r7 || r18))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (certReqM(r12,r7,r6) \in nw(s)) = true .
  eq pqverify(r18,h((r9 || r13 || r20 || r21)),r23) = true .
  eq verify(r16,h((r9 || r13 || r20 || r21)),r22) = true .
  eq (chM(r6,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  eq (shM(r12,r7,r6,(r8 || r13 || r14 || r15)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq r19 = pqsign(pqSignPriK(ca),h((r7 || r18))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (certReqM(r12,r7,r6) \in nw(s)) = true .
  eq pqverify(r18,h((r9 || r13 || r20 || r21)),r23) = true .
  eq verify(r16,h((r9 || r13 || r20 || r21)),r22) = true .
  eq (chM(r6,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq r19 = pqsign(pqSignPriK(ca),h((r7 || r18))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (certReqM(r12,r7,r6) \in nw(s)) = true .
  eq pqverify(r18,h((r9 || r13 || r20 || r21)),r23) = true .
  eq verify(r16,h((r9 || r13 || r20 || r21)),r22) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq r19 = pqsign(pqSignPriK(ca),h((r7 || r18))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (certReqM(r12,r7,r6) \in nw(s)) = true .
  eq pqverify(r18,h((r9 || r13 || r20 || r21)),r23) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq r19 = pqsign(pqSignPriK(ca),h((r7 || r18))) .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (certReqM(r12,r7,r6) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq r17 = sign(signPriK(ca),h((r7 || r16))) .
  eq (r19 = pqsign(pqSignPriK(ca),h((r7 || r18)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Suites .
  op r11 : -> PqKemParams .
  op r12 : -> Prin .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r16 : -> SignPubK .
  op r17 : -> Data .
  op r18 : -> PqSignPubK .
  op r19 : -> Data .
  op r2 : -> Rand .
  op r20 : -> EcPublicK .
  op r21 : -> PqPublicK .
  op r22 : -> Data .
  op r23 : -> Data .
  op r24 : -> Nat .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq (r17 = sign(signPriK(ca),h((r7 || r16)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(ckeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqCipher .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkCkeyex(s,r1,r5,r6,r7),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqCipher .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkCkeyex(s,r1,r5,r6,r7),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqCipher .
  op s : -> Sys .
  eq (r6 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkCkeyex(s,r1,r5,r6,r7),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkFinish(s,r1,r5,r6),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkFinish(s,r1,r5,r6),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> DataL .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkHello(s,r1,r5,r6),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> DataL .
  op s : -> Sys .
  eq (r6 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkHello(s,r1,r5,r6),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op s : -> Sys .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkNoti(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> SignPubK .
  op r7 : -> Data .
  op r8 : -> PqSignPubK .
  op r9 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  eq (r8 \in knl(s)) = true .
  eq (r9 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkScert(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> SignPubK .
  op r7 : -> Data .
  op r8 : -> PqSignPubK .
  op r9 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  eq (r8 \in knl(s)) = true .
  eq (r9 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkScert(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> SignPubK .
  op r7 : -> Data .
  op r8 : -> PqSignPubK .
  op r9 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  eq (r8 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkScert(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> SignPubK .
  op r7 : -> Data .
  op r8 : -> PqSignPubK .
  op r9 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkScert(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> SignPubK .
  op r7 : -> Data .
  op r8 : -> PqSignPubK .
  op r9 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkScert(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqPublicK .
  op r8 : -> Data .
  op r9 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  eq (r8 \in knl(s)) = true .
  eq (r9 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkSkeyex(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqPublicK .
  op r8 : -> Data .
  op r9 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  eq (r8 \in knl(s)) = true .
  eq (r9 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkSkeyex(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqPublicK .
  op r8 : -> Data .
  op r9 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = true .
  eq (r8 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkSkeyex(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqPublicK .
  op r8 : -> Data .
  op r9 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = true .
  eq (r7 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkSkeyex(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> EcPublicK .
  op r7 : -> PqPublicK .
  op r8 : -> Data .
  op r9 : -> Data .
  op s : -> Sys .
  eq (r6 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(fkSkeyex(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(g1(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(g1(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(g21(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(g21(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(g21(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(g22(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(g22(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(g22(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(g23(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(g23(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> DataL .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(g23(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Version .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suites .
  op r6 : -> Suite .
  op r7 : -> SignPubK .
  op r8 : -> Prin .
  op r9 : -> PqKemParams .
  op s : -> Sys .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gBasic(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gBasic2(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gBasic2(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gBasic2(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqCipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gDecaps(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqCipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gDecaps(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqCipher .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gDecaps(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gEcSecretK(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gEcSecretK(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> EcPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gEcShare(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> EcPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gEcShare(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> EcPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gEcShare(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gPqSecretK(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gPqSecretK(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gPqShare(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gPqShare(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSecretK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqPublicK .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gPqShare(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSignPriK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gPqSign(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSignPriK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gPqSign(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> PqSignPriK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gPqSign(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> SignPriK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gSign(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> SignPriK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r5 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gSign(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> SignPriK .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Data .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(gSign(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op s : -> Sys .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(helloReq(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq r1 = ca .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(rvPqSignK(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 = ca) = false .
  eq (pqSignPriK(r1) \in' scrLeaked(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(rvPqSignK(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 = ca) = false .
  eq (pqSignPriK(r1) \in' scrLeaked(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(rvPqSignK(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq r1 = ca .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(rvSignK(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 = ca) = false .
  eq (signPriK(r1) \in' scrLeaked(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(rvSignK(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op s : -> Sys .
  eq (r1 = ca) = false .
  eq (signPriK(r1) \in' scrLeaked(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(rvSignK(s,r1),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq pqverify(r19,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r25) = true .
  eq verify(r17,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r24) = true .
  eq (cfM(r1,r5,r6,enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq pqverify(r19,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r25) = true .
  eq verify(r17,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r24) = true .
  eq (cfM(r1,r5,r6,enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq pqverify(r19,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r25) = true .
  eq verify(r17,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r24) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq pqverify(r19,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r25) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq (r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq (r20 = pqsign(pqSignPriK(ca),h((r5 || r19)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r18 = sign(signPriK(ca),h((r5 || r17)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Rand .
  op s : -> Sys .
  eq (sh2M(r5,r5,r1,(r6 || r9 || r8 || r10)) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS2(s,r1,r5,r6,r7,r8,r9,r10),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suite .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Sid .
  op r9 : -> Rand .
  op s : -> Sys .
  eq (sh2M(r5,r5,r1,(r6 || r9 || r8 || r10)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sChangeCS2(s,r1,r5,r6,r7,r8,r9,r10),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suite .
  op r9 : -> Sid .
  op s : -> Sys .
  eq (shM(r5,r5,r1,(r6 || r7 || r8 || r9)) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(scert(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Version .
  op r7 : -> Rand .
  op r8 : -> Suite .
  op r9 : -> Sid .
  op s : -> Sys .
  eq (shM(r5,r5,r1,(r6 || r7 || r8 || r9)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(scert(s,r1,r5,r6,r7,r8,r9),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq pqverify(r19,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r25) = true .
  eq verify(r17,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r24) = true .
  eq (cfM(r1,r5,r6,enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq pqverify(r19,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r25) = true .
  eq verify(r17,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r24) = true .
  eq (cfM(r1,r5,r6,enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq pqverify(r19,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r25) = true .
  eq verify(r17,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r24) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = true .
  eq pqverify(r19,h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)),r25) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = true .
  eq (skexM(r6,r6,r5,(ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15))))),r16) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = true .
  eq (certM(r6,r6,r5,(r6 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = true .
  eq (certM(r1,r5,r6,(r5 || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = true .
  eq (ckexM(r1,r5,r6,(r21 || r22),r23) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (shM(r6,r6,r5,(r7 || r11 || r12 || r13)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = true .
  eq (chM(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22))) .
  eq (certVerM(r1,r5,r6,(r24 || r25)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq r20 = pqsign(pqSignPriK(ca),h((r5 || r19))) .
  eq (r26 = enc(hsckey(ms(((r14 | ecSecret(r21)) || decaps(r22,r15)),(r8 || r11 || r21 || r22)),(r8 || r11)),h((r5 || r6 || r13 || r7 || r8 || r9 || r10 || r11 || r12 || signPubK(r6) || sign(signPriK(ca),h((r6 || signPubK(r6)))) || pqSignPubK(r6) || pqsign(pqSignPriK(ca),h((r6 || pqSignPubK(r6)))) || ecPublic(r14) || keygen(r15) || sign(signPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || pqsign(pqSignPriK(r6),h((r8 || r11 || ecPublic(r14) || keygen(r15)))) || r17 || sign(signPriK(ca),h((r5 || r17))) || r19 || pqsign(pqSignPriK(ca),h((r5 || r19))) || r21 || r22)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq r18 = sign(signPriK(ca),h((r5 || r17))) .
  eq (r20 = pqsign(pqSignPriK(ca),h((r5 || r19)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> PqKemParams .
  op r11 : -> Rand .
  op r12 : -> Suite .
  op r13 : -> Sid .
  op r14 : -> EcSecretK .
  op r15 : -> PqSecretK .
  op r16 : -> Nat .
  op r17 : -> SignPubK .
  op r18 : -> Data .
  op r19 : -> PqSignPubK .
  op r2 : -> Rand .
  op r20 : -> Data .
  op r21 : -> EcPublicK .
  op r22 : -> PqCipher .
  op r23 : -> Nat .
  op r24 : -> Data .
  op r25 : -> Data .
  op r26 : -> Data .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Suites .
  op s : -> Sys .
  eq (r18 = sign(signPriK(ca),h((r5 || r17)))) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = true .
  eq (sh2M(r6,r6,r5,(r7 || r13 || r9 || r11)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq ss(s,r6,r5,r9) = session(server,r11,r12) .
  eq (ch2M(r1,r5,r6,(r7 || r8 || r9 || r10)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r10 : -> Suites .
  op r11 : -> Suite .
  op r12 : -> Data .
  op r13 : -> Rand .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Version .
  op r8 : -> Rand .
  op r9 : -> Sid .
  op s : -> Sys .
  eq (ss(s,r6,r5,r9) = session(server,r11,r12)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(sfinish2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Version .
  op r11 : -> Rand .
  op r12 : -> Suites .
  op r13 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suite .
  op r6 : -> Sid .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Prin .
  op s : -> Sys .
  eq contains(r12,r5) = true .
  eq (r1 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shello(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Version .
  op r11 : -> Rand .
  op r12 : -> Suites .
  op r13 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suite .
  op r6 : -> Sid .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Prin .
  op s : -> Sys .
  eq contains(r12,r5) = true .
  eq (r1 \in udata(s)) = false .
  eq (r6 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shello(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Version .
  op r11 : -> Rand .
  op r12 : -> Suites .
  op r13 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suite .
  op r6 : -> Sid .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Prin .
  op s : -> Sys .
  eq contains(r12,r5) = true .
  eq (r1 \in udata(s)) = false .
  eq (r6 \in udata(s)) = false .
  eq (chM(r7,r8,r9,(r10 || r11 || r12 || r13)) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shello(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Version .
  op r11 : -> Rand .
  op r12 : -> Suites .
  op r13 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suite .
  op r6 : -> Sid .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Prin .
  op s : -> Sys .
  eq contains(r12,r5) = true .
  eq (r1 \in udata(s)) = false .
  eq (r6 \in udata(s)) = false .
  eq (chM(r7,r8,r9,(r10 || r11 || r12 || r13)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shello(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Version .
  op r11 : -> Rand .
  op r12 : -> Suites .
  op r13 : -> PqKemParams .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Suite .
  op r6 : -> Sid .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Prin .
  op s : -> Sys .
  eq contains(r12,r5) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shello(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Sid .
  op r11 : -> Suites .
  op r12 : -> Suite .
  op r13 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r11,r12) = true .
  eq (r1 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shello2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Sid .
  op r11 : -> Suites .
  op r12 : -> Suite .
  op r13 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r11,r12) = true .
  eq (r1 \in udata(s)) = false .
  eq ss(s,r7,r6,r10) = session(server,r12,r13) .
  eq (ch2M(r5,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shello2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Sid .
  op r11 : -> Suites .
  op r12 : -> Suite .
  op r13 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r11,r12) = true .
  eq (r1 \in udata(s)) = false .
  eq ss(s,r7,r6,r10) = session(server,r12,r13) .
  eq (ch2M(r5,r6,r7,(r8 || r9 || r10 || r11)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shello2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Sid .
  op r11 : -> Suites .
  op r12 : -> Suite .
  op r13 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r11,r12) = true .
  eq (r1 \in udata(s)) = false .
  eq (ss(s,r7,r6,r10) = session(server,r12,r13)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shello2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Rand .
  op r10 : -> Sid .
  op r11 : -> Suites .
  op r12 : -> Suite .
  op r13 : -> Data .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Version .
  op r9 : -> Rand .
  op s : -> Sys .
  eq contains(r11,r12) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shello2(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op s : -> Sys .
  eq (certReqM(r5,r5,r1) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shelloDone(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> Prin .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> Prin .
  op s : -> Sys .
  eq (certReqM(r5,r5,r1) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(shelloDone(s,r1,r5),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (chM(r6,r7,r8,(r9 || r10 || r11 || r12)) \in nw(s)) = true .
  eq (shM(r8,r8,r7,(r9 || r13 || r14 || r15)) \in nw(s)) = true .
  eq (certM(r8,r8,r7,(r8 || signPubK(r8) || sign(signPriK(ca),h((r8 || signPubK(r8)))) || pqSignPubK(r8) || pqsign(pqSignPriK(ca),h((r8 || pqSignPubK(r8)))))) \in nw(s)) = true .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (chM(r6,r7,r8,(r9 || r10 || r11 || r12)) \in nw(s)) = true .
  eq (shM(r8,r8,r7,(r9 || r13 || r14 || r15)) \in nw(s)) = true .
  eq (certM(r8,r8,r7,(r8 || signPubK(r8) || sign(signPriK(ca),h((r8 || signPubK(r8)))) || pqSignPubK(r8) || pqsign(pqSignPriK(ca),h((r8 || pqSignPubK(r8)))))) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (chM(r6,r7,r8,(r9 || r10 || r11 || r12)) \in nw(s)) = true .
  eq (shM(r8,r8,r7,(r9 || r13 || r14 || r15)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> true
open CLSAFE-CONFIG .
  op a : -> Prin .
  op b : -> Prin .
  op dl : -> DataL .
  op k2 : -> EcSecretK .
  op k2' : -> PqSecretK .
  op pk : -> EcPublicK .
  op pk' : -> PqPublicK .
  op r : -> Rand .
  op r1 : -> EcSecretK .
  op r10 : -> Rand .
  op r11 : -> Suites .
  op r12 : -> PqKemParams .
  op r13 : -> Rand .
  op r14 : -> Suite .
  op r15 : -> Sid .
  op r2 : -> Rand .
  op r3 : -> Rand .
  op r4 : -> Rand .
  op r5 : -> PqSecretK .
  op r6 : -> Prin .
  op r7 : -> Prin .
  op r8 : -> Prin .
  op r9 : -> Version .
  op s : -> Sys .
  eq (r1 \in udata(s)) = false .
  eq (r5 \in udata(s)) = false .
  eq (chM(r6,r7,r8,(r9 || r10 || r11 || r12)) \in nw(s)) = false .
  red scrused-lm10(s,a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) implies scrused-lm10(skeyex(s,r1,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15),a,b,pk,pk',k2,k2',r,r2,r3,r4,dl) .
close

--> Time taken is 4364ms